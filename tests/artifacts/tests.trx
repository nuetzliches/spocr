<?xml version="1.0" encoding="utf-8"?>
<TestRun id="a2d0c9da-da99-4e37-8282-ba9c85e38307" name="sgies@WOODY 2025-10-23 18:07:42" runUser="WOODY\sgies" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-10-23T18:07:42.7864507+02:00" queuing="2025-10-23T18:07:42.7864510+02:00" start="2025-10-23T18:07:42.2748794+02:00" finish="2025-10-23T18:08:23.2529065+02:00" />
  <TestSettings name="default" id="ab8bd389-5545-47eb-b0b1-845f7c6718a1">
    <Deployment runDeploymentRoot="sgies_WOODY_2025-10-23_18_07_42" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="e8d7379a-254c-4b2a-a2ba-8a03f6dd5a86" testId="c13f10f1-a004-afd2-3408-a6c75d1b74f3" testName="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.ComplexJoinAndApply_Should_Bind_DottedAliases" computerName="WOODY" duration="00:00:00.0091997" startTime="2025-10-23T18:07:42.8872771+02:00" endTime="2025-10-23T18:07:42.8958370+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8d7379a-254c-4b2a-a2ba-8a03f6dd5a86" />
    <UnitTestResult executionId="e7109ffe-0590-4c80-af73-c27015969297" testId="8aa13eea-74a9-2da4-799a-2901dfcced67" testName="SpocR.Tests.Cli.HeuristicAndCacheTests.Caching_Skips_Unchanged_Definition_Load" computerName="WOODY" duration="00:00:00.0548101" startTime="2025-10-23T18:07:42.7671487+02:00" endTime="2025-10-23T18:07:42.8070627+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e7109ffe-0590-4c80-af73-c27015969297" />
    <UnitTestResult executionId="1920acc5-b221-45e6-bec4-68607d292312" testId="0afebfa1-8db4-b7c4-3c01-c53f76d4b0bf" testName="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_Throws_For_Missing_Directory" computerName="WOODY" duration="00:00:00.0004008" startTime="2025-10-23T18:07:43.2720879+02:00" endTime="2025-10-23T18:07:43.2723827+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1920acc5-b221-45e6-bec4-68607d292312" />
    <UnitTestResult executionId="ddbd3236-7c28-4d42-99c9-eecf84a905c0" testId="f4a765a6-c9c1-87ed-d242-099e8b68ea36" testName="SpocR.Tests.Cli.StoredProcedureListTests.Schema_Not_Found_Returns_Empty_Array" computerName="WOODY" duration="00:00:00.0004238" startTime="2025-10-23T18:07:43.1136493+02:00" endTime="2025-10-23T18:07:43.1140498+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ddbd3236-7c28-4d42-99c9-eecf84a905c0" />
    <UnitTestResult executionId="6d94b498-2127-4ad1-85b2-434fef7e64d1" testId="85aeed33-4951-9f79-1a3c-1197a163e4d8" testName="SpocR.Tests.ColumnNormalizationTests.UserDefinedTypeFiles_Should_Not_Have_Empty_BaseSqlTypeName" computerName="WOODY" duration="00:00:00.0009651" startTime="2025-10-23T18:07:51.5903315+02:00" endTime="2025-10-23T18:07:51.5910742+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d94b498-2127-4ad1-85b2-434fef7e64d1" />
    <UnitTestResult executionId="27e80c81-18c3-46fc-8e92-2179d30a8af8" testId="0a5b3e91-25ed-4183-596b-7602ad35f5fb" testName="SpocR.Tests.StoredProcedureAstTests.Ambiguous_SinglePart_Column_Should_Set_IsAmbiguous" computerName="WOODY" duration="00:00:00.0005936" startTime="2025-10-23T18:07:43.1532956+02:00" endTime="2025-10-23T18:07:43.1538380+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="27e80c81-18c3-46fc-8e92-2179d30a8af8" />
    <UnitTestResult executionId="2d9b3290-cd2d-40b9-b122-3876ff7ed448" testId="b1e1dde0-2c4a-85da-c4da-e593e551e501" testName="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_HasExpectedSectionOrder" computerName="WOODY" duration="00:00:00.0055900" startTime="2025-10-23T18:08:23.1060453+02:00" endTime="2025-10-23T18:08:23.1118327+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d9b3290-cd2d-40b9-b122-3876ff7ed448">
      <Output>
        <ErrorInfo>
          <Message>Unified procedure file not found. Searched 1 files for unified type 'UserListResult'.</Message>
          <StackTrace>   at SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_HasExpectedSectionOrder() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generators\UnifiedProcedureOrderingTests.cs:line 83&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71c3345a-29dd-42df-9dee-b5b6e27186cc" testId="003aa20a-732b-8dd2-99e9-649bbbc15197" testName="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicSpExec AS BEGIN DECLAR&quot;···)" computerName="WOODY" duration="00:00:00.0000669" startTime="2025-10-23T18:07:43.1780454+02:00" endTime="2025-10-23T18:07:43.1781065+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71c3345a-29dd-42df-9dee-b5b6e27186cc" />
    <UnitTestResult executionId="b6c53a95-c01c-4eb0-a10f-09cdb04dbee7" testId="bbe016f2-c985-a967-63a3-28c53ae8982f" testName="SpocR.Tests.VersionExtensionsTests.IsLessThan_Should_Return_True_When_Left_Is_Older" computerName="WOODY" duration="00:00:00.0000432" startTime="2025-10-23T18:07:43.3572949+02:00" endTime="2025-10-23T18:07:43.3573160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6c53a95-c01c-4eb0-a10f-09cdb04dbee7" />
    <UnitTestResult executionId="79bb7ecb-dc68-4da1-9b7b-d5b1239051bb" testId="aea29fa1-b8d4-d6ff-65a6-6c874c9aa64f" testName="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests.Consolidated_Procedure_Files_DoubleRun_Deterministic" computerName="WOODY" duration="00:00:00.0433432" startTime="2025-10-23T18:07:43.2978197+02:00" endTime="2025-10-23T18:07:43.3410859+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="79bb7ecb-dc68-4da1-9b7b-d5b1239051bb" />
    <UnitTestResult executionId="68908030-8468-4dac-bcd8-eb05a93274c1" testId="367ab638-0be8-b5b4-efae-d766cf126c93" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests.ParsesProcedures_AndSeparatesInputOutput" computerName="WOODY" duration="00:00:00.0135103" startTime="2025-10-23T18:07:42.8600800+02:00" endTime="2025-10-23T18:07:42.8735747+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="68908030-8468-4dac-bcd8-eb05a93274c1" />
    <UnitTestResult executionId="a25de035-44de-4817-8441-ce9e0bfc03c2" testId="55909689-d844-996e-7f43-57cf16c7bdab" testName="SpocR.Tests.SchemaSnapshotStructureTests.ViewSnapshot_Should_Pruned_NullableFalse" computerName="WOODY" duration="00:00:00.0003557" startTime="2025-10-23T18:07:51.5930401+02:00" endTime="2025-10-23T18:07:51.5934029+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a25de035-44de-4817-8441-ce9e0bfc03c2" />
    <UnitTestResult executionId="de0dbdee-2b32-402e-ac81-032f384e248b" testId="c664f295-1a5b-a54a-a146-91c03c83eca0" testName="SpocR.Tests.AggregateTypingExtendedTests.Aggregates_Should_Have_Inferred_Types" computerName="WOODY" duration="00:00:00.0460208" startTime="2025-10-23T18:07:42.6686848+02:00" endTime="2025-10-23T18:07:42.7240029+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de0dbdee-2b32-402e-ac81-032f384e248b">
      <Output>
        <ErrorInfo>
          <Message>Assert.Single() Failure: The collection was empty</Message>
          <StackTrace>   at SpocR.Tests.AggregateTypingExtendedTests.Aggregates_Should_Have_Inferred_Types() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\AggregateTypingExtendedTests.cs:line 37&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="30f786e6-0e3c-4a1b-a5c1-bd3b232e06bf" testId="65073c41-c98a-344b-72c5-75328c7cf402" testName="SpocR.Tests.Cli.ExperimentalCliTests.GenerateDemo_Runs_When_Experimental_Flag_On" computerName="WOODY" duration="00:00:00.0162350" startTime="2025-10-23T18:08:23.0897009+02:00" endTime="2025-10-23T18:08:23.1059485+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="30f786e6-0e3c-4a1b-a5c1-bd3b232e06bf" />
    <UnitTestResult executionId="8f2f0cc8-4c2e-4d9d-8efb-7ea9277eabc2" testId="252ff013-7a23-afcd-436c-79dde7617bea" testName="SpocR.Tests.Cli.FullSuiteExecutionSummaryTests.FullSuite_Should_Write_Counters" computerName="WOODY" duration="00:00:00.0005303" startTime="2025-10-23T18:07:49.4591476+02:00" endTime="2025-10-23T18:07:49.4592406+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f2f0cc8-4c2e-4d9d-8efb-7ea9277eabc2" />
    <UnitTestResult executionId="76e49357-adb0-412b-bef9-279740353824" testId="b497dfb4-8f8a-3574-c4cb-5508852ffc12" testName="SpocR.Tests.Cli.RoleDeprecationTests.Save_Removes_Role_When_Default" computerName="WOODY" duration="00:00:00.0186351" startTime="2025-10-23T18:08:23.1862626+02:00" endTime="2025-10-23T18:08:23.2051198+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="76e49357-adb0-412b-bef9-279740353824" />
    <UnitTestResult executionId="fe74923d-4a0d-4866-b548-33eb608c52ac" testId="6a56a260-1ef8-d2bf-67ad-5f7953ba123e" testName="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Missing_Placeholder_Yields_Empty" computerName="WOODY" duration="00:00:00.0000640" startTime="2025-10-23T18:07:43.1904839+02:00" endTime="2025-10-23T18:07:43.1905013+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fe74923d-4a0d-4866-b548-33eb608c52ac" />
    <UnitTestResult executionId="a93be315-413c-4915-a9cd-b8ab95426181" testId="6c93ad14-318b-54a0-0c29-168d084c36df" testName="SpocR.Tests.SpocRVNext.Generators.JsonResultSetTypeMappingTests.JsonResultSet_Should_Remap_StringColumns_ToStrongTypes" computerName="WOODY" duration="00:00:00.0765989" startTime="2025-10-23T18:07:42.9261369+02:00" endTime="2025-10-23T18:07:43.0027254+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a93be315-413c-4915-a9cd-b8ab95426181" />
    <UnitTestResult executionId="a16507ab-18ae-4b7b-9a49-c92c64df02c3" testId="888231ae-0280-2e34-97fd-db8995e02295" testName="SpocR.Tests.SchemaSnapshotStructureTests.Index_Should_List_NewArtefactEntries" computerName="WOODY" duration="00:00:00.0063707" startTime="2025-10-23T18:07:51.5937001+02:00" endTime="2025-10-23T18:07:51.5998257+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a16507ab-18ae-4b7b-9a49-c92c64df02c3" />
    <UnitTestResult executionId="7e3617ec-51a9-41c5-8958-9d4e3de573a2" testId="0eb28a37-f0ee-7fcc-66eb-97c0fd3d0c49" testName="SpocR.Tests.SchemaSnapshotStructureTests.TableColumns_Prune_FalseAndZeroValues" computerName="WOODY" duration="00:00:00.0003317" startTime="2025-10-23T18:07:51.5999121+02:00" endTime="2025-10-23T18:07:51.6001943+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e3617ec-51a9-41c5-8958-9d4e3de573a2" />
    <UnitTestResult executionId="38d075d0-c334-48c8-961e-b0e4c4de5bfa" testId="e7288453-574f-09fe-6b45-2f5d799357d0" testName="SpocR.Tests.ColumnNormalizationTests.MaxLength_Prunes_Zero" computerName="WOODY" duration="00:00:00.0004228" startTime="2025-10-23T18:07:51.5917355+02:00" endTime="2025-10-23T18:07:51.5921101+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="38d075d0-c334-48c8-961e-b0e4c4de5bfa" />
    <UnitTestResult executionId="d225c4e8-75cc-4874-9a46-84bb3aeab5d1" testId="4c28ba82-bd75-5596-d8dc-73c43cff1045" testName="SpocR.Tests.StoredProcedureJsonAstOnlyTests.Legacy_Single_Column_Sentinel_Upgraded_With_Flag" computerName="WOODY" duration="00:00:00.0002138" startTime="2025-10-23T18:07:43.0060667+02:00" endTime="2025-10-23T18:07:43.0062375+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d225c4e8-75cc-4874-9a46-84bb3aeab5d1" />
    <UnitTestResult executionId="b5db266e-8a68-42a7-ae9c-54da642c6c72" testId="657921b0-9e76-65c7-527d-e042084b0a72" testName="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests.MultiResult_Suffixes_Applied_For_Duplicate_Base_Table" computerName="WOODY" duration="00:00:00.0026845" startTime="2025-10-23T18:08:23.1352691+02:00" endTime="2025-10-23T18:08:23.1379845+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5db266e-8a68-42a7-ae9c-54da642c6c72" />
    <UnitTestResult executionId="a10e63a0-1f9f-47c1-a946-50511d49977b" testId="c57cd40c-828a-24c1-0b7d-2aabad50d7e0" testName="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.JsonQueryAlias_Should_Not_Have_SourceBinding" computerName="WOODY" duration="00:00:00.0097476" startTime="2025-10-23T18:07:42.8778015+02:00" endTime="2025-10-23T18:07:42.8865813+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a10e63a0-1f9f-47c1-a946-50511d49977b" />
    <UnitTestResult executionId="2aabe591-c4b3-4d4d-8d33-dd6e28240bd9" testId="fc622026-4829-25ac-689b-8d48120a17f3" testName="SpocR.Tests.Cli.SkipUpdateTests.EnvVar_Skips_Update_Check" computerName="WOODY" duration="00:00:00.0046096" startTime="2025-10-23T18:07:43.1790056+02:00" endTime="2025-10-23T18:07:43.1836577+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2aabe591-c4b3-4d4d-8d33-dd6e28240bd9" />
    <UnitTestResult executionId="8c32e3b8-b663-44c3-9302-a470d95ee016" testId="bf4e52d2-269c-228d-8e0d-bd8d3b3f5622" testName="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests.DbContextGenerator_Skips_In_Legacy_Mode" computerName="WOODY" duration="00:00:00.0020552" startTime="2025-10-23T18:07:43.2602117+02:00" endTime="2025-10-23T18:07:43.2622103+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c32e3b8-b663-44c3-9302-a470d95ee016" />
    <UnitTestResult executionId="c27d59db-8b16-4d7f-b6cf-8211d7f7da68" testId="89d6a87f-0476-7eb2-bb92-2640d7503f49" testName="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Write_And_Verify_Should_Match" computerName="WOODY" duration="00:00:00.0072383" startTime="2025-10-23T18:08:23.1535487+02:00" endTime="2025-10-23T18:08:23.1607174+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c27d59db-8b16-4d7f-b6cf-8211d7f7da68" />
    <UnitTestResult executionId="7afc0c55-a221-4fdd-8f2e-61709ab0014a" testId="3032ffa2-c459-521f-bcf6-9ba5ade98caa" testName="SpocR.Tests.SpocRVNext.Generators.JsonResultSetBoolDateTimeRoundtripTests.GeneratedJsonResultSet_Should_Contain_StrongTypes_And_No_LenientStringConverter" computerName="WOODY" duration="00:00:00.0094130" startTime="2025-10-23T18:07:43.3427108+02:00" endTime="2025-10-23T18:07:43.3520686+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7afc0c55-a221-4fdd-8f2e-61709ab0014a" />
    <UnitTestResult executionId="5f005d32-add1-4082-8c25-ca9bf5626a39" testId="f2e5a69b-95b0-11b7-748b-59a021688a62" testName="SpocR.Tests.CodeGeneration.DirectoryHasherTests.HashDirectory_Twice_YieldsSameAggregate" computerName="WOODY" duration="00:00:00.0019918" startTime="2025-10-23T18:07:43.1313810+02:00" endTime="2025-10-23T18:07:43.1329863+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f005d32-add1-4082-8c25-ca9bf5626a39" />
    <UnitTestResult executionId="96116c26-437c-4e81-bd5f-d91a206627c4" testId="3cb1853e-9f7f-fec6-3601-ee076b422d59" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;int&quot;, expected: &quot;System.Data.DbType.Int32&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1169144+02:00" endTime="2025-10-23T18:07:43.1169449+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="96116c26-437c-4e81-bd5f-d91a206627c4" />
    <UnitTestResult executionId="e18dbd67-7b16-4725-887a-dda3194e9342" testId="7e71660c-171e-6dc0-a3d9-a4801da95574" testName="SpocR.Tests.Cli.StoredProcedureListTests.List_Returns_Procedures_As_Json_Array" computerName="WOODY" duration="00:00:00.0039858" startTime="2025-10-23T18:07:43.1096422+02:00" endTime="2025-10-23T18:07:43.1135937+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e18dbd67-7b16-4725-887a-dda3194e9342" />
    <UnitTestResult executionId="ec110c70-5109-4967-8fde-deb7f23c2d7d" testId="158cb7cd-b6fd-4431-839d-c1557139f101" testName="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Empty_Template_Returns_Empty" computerName="WOODY" duration="00:00:00.0000800" startTime="2025-10-23T18:07:43.1904199+02:00" endTime="2025-10-23T18:07:43.1904384+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec110c70-5109-4967-8fde-deb7f23c2d7d" />
    <UnitTestResult executionId="177a52e6-23e5-43e0-b46a-f9b22eba13cd" testId="67d0efa7-b4bf-e345-0157-58cc9bbb8c49" testName="SpocR.Tests.Cli.RoleDeprecationTests.Keep_Role_When_NonDefault" computerName="WOODY" duration="00:00:00.0058194" startTime="2025-10-23T18:08:23.2055098+02:00" endTime="2025-10-23T18:08:23.2111994+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="177a52e6-23e5-43e0-b46a-f9b22eba13cd" />
    <UnitTestResult executionId="77ba52d5-e309-4f05-b36a-fc2a673eab22" testId="6667483d-cada-4113-8c04-7f7cc53957b4" testName="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests.Optional_RealSampleSnapshot_IfPresent_IsDeterministic" computerName="WOODY" duration="00:00:00.0001554" startTime="2025-10-23T18:07:43.1912501+02:00" endTime="2025-10-23T18:07:43.1914101+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="77ba52d5-e309-4f05-b36a-fc2a673eab22" />
    <UnitTestResult executionId="ae9b83cf-b6a6-4d4d-b0a9-40724be272d1" testId="ee109950-b706-c268-4f17-60f4142f6bf0" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;__alreadyPascal&quot;, expected: &quot;__alreadyPascal&quot;)" computerName="WOODY" duration="00:00:00.0000016" startTime="2025-10-23T18:07:42.8774659+02:00" endTime="2025-10-23T18:07:42.8774837+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae9b83cf-b6a6-4d4d-b0a9-40724be272d1" />
    <UnitTestResult executionId="042da50a-a5d7-4dda-b29c-137dfe510015" testId="92a7fcb9-fd96-3c60-dd27-7ae8f78b2955" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some.value&quot;, expected: &quot;SomeValue&quot;)" computerName="WOODY" duration="00:00:00.0000419" startTime="2025-10-23T18:07:42.8763698+02:00" endTime="2025-10-23T18:07:42.8763965+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="042da50a-a5d7-4dda-b29c-137dfe510015" />
    <UnitTestResult executionId="d2decc84-af2f-4981-868f-75e41d8effb7" testId="61bfa95a-b7bc-118f-15c5-1fbf580fdfb6" testName="SpocR.Tests.Cli.JsonParserV5InferenceTests.Cast_Target_Type_Should_Be_Assigned" computerName="WOODY" duration="00:00:00.0052478" startTime="2025-10-23T18:08:23.1792682+02:00" endTime="2025-10-23T18:08:23.1845459+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d2decc84-af2f-4981-868f-75e41d8effb7" />
    <UnitTestResult executionId="8cb08421-b9e9-4bee-969a-5300eee94284" testId="dba03faa-b621-8cf4-5567-8b61fe43eecf" testName="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests.DynamicSql_ExecVariable_Forces_Generic_Naming_MultipleSets" computerName="WOODY" duration="00:00:00.0015560" startTime="2025-10-23T18:07:43.0975298+02:00" endTime="2025-10-23T18:07:43.0990272+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8cb08421-b9e9-4bee-969a-5300eee94284" />
    <UnitTestResult executionId="eb1c9a1e-b6ca-41ff-9848-5698207779e3" testId="ab785694-2231-7358-863f-c34c2f0bb261" testName="SpocR.Tests.Configuration.EnvConfigurationTests.OutputDir_DefaultsToSpocR_WhenMissing" computerName="WOODY" duration="00:00:00.0031508" startTime="2025-10-23T18:07:42.7326337+02:00" endTime="2025-10-23T18:07:42.7340318+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb1c9a1e-b6ca-41ff-9848-5698207779e3" />
    <UnitTestResult executionId="72bc3a2b-070a-4d73-a11e-7a46ad7c1f26" testId="06a02a93-20c5-fddc-e17e-66032bfc8fb7" testName="SpocR.Tests.Cli.JsonParserSelectStarTests.ForJson_WithSelectStar_SetsHasSelectStarTrueAndNoColumns" computerName="WOODY" duration="00:00:00.0003184" startTime="2025-10-23T18:07:43.3825721+02:00" endTime="2025-10-23T18:07:43.3828487+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72bc3a2b-070a-4d73-a11e-7a46ad7c1f26" />
    <UnitTestResult executionId="f3b73b96-573f-4f0b-9836-6cd060f1b43e" testId="a5ca2523-b4f6-ee0e-288b-ee9e54487a97" testName="SpocR.Tests.ResultSetNamingConflictTests.DuplicateSuggestedNames_AreAssignedIncrementalSuffixes" computerName="WOODY" duration="00:00:00.0024560" startTime="2025-10-23T18:07:43.0028869+02:00" endTime="2025-10-23T18:07:43.0053597+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f3b73b96-573f-4f0b-9836-6cd060f1b43e" />
    <UnitTestResult executionId="f4582c2f-d9fb-440a-85f7-8f32b400c169" testId="689497bd-398e-2b22-7e53-6bc9c1b12402" testName="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.Filters_TableTypes_By_BuildSchemas_AllowList" computerName="WOODY" duration="00:00:00.0022469" startTime="2025-10-23T18:07:43.1757337+02:00" endTime="2025-10-23T18:07:43.1779292+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f4582c2f-d9fb-440a-85f7-8f32b400c169" />
    <UnitTestResult executionId="dd9b4055-bf59-4590-99b5-021add507e86" testId="33d1df0d-98a2-1cf9-8a60-07434db78425" testName="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorPathEdgeTests.Generates_In_Directory_With_Dots" computerName="WOODY" duration="00:00:00.0037670" startTime="2025-10-23T18:07:51.5654663+02:00" endTime="2025-10-23T18:07:51.5694462+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dd9b4055-bf59-4590-99b5-021add507e86" />
    <UnitTestResult executionId="b07d2ac8-604b-4041-895a-f1e015e21ef6" testId="f6beb158-636b-a0d4-cf9f-493e86cd87c4" testName="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests.DynamicSql_SpExecutesql_Forces_Generic_Naming" computerName="WOODY" duration="00:00:00.0094274" startTime="2025-10-23T18:07:43.0927422+02:00" endTime="2025-10-23T18:07:43.0974215+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b07d2ac8-604b-4041-895a-f1e015e21ef6" />
    <UnitTestResult executionId="b55868c7-7541-46ae-bef9-7550ab3879cc" testId="45c262da-a20c-e20f-1b3c-5bd2ab24299a" testName="SpocR.Tests.ColumnNormalizationTests.BaseSqlTypeName_Should_Differ_From_SqlTypeName_When_Present" computerName="WOODY" duration="00:00:00.0003627" startTime="2025-10-23T18:07:51.5926101+02:00" endTime="2025-10-23T18:07:51.5929387+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b55868c7-7541-46ae-bef9-7550ab3879cc" />
    <UnitTestResult executionId="74c56a56-1365-42e3-9780-7f63b1a07e06" testId="9d78bb61-69f2-8609-4581-bb08b9a82eae" testName="SpocR.Tests.SimpleTest.SimpleAssertion_ShouldWork" computerName="WOODY" duration="00:00:00.0000668" startTime="2025-10-23T18:07:43.3412274+02:00" endTime="2025-10-23T18:07:43.3412680+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="74c56a56-1365-42e3-9780-7f63b1a07e06" />
    <UnitTestResult executionId="a61c9c4b-78b1-45f4-b180-273d7979e382" testId="4f80185b-9a1d-86e4-5cad-bcb58e578d21" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;float&quot;, expected: &quot;System.Data.DbType.Double&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1160766+02:00" endTime="2025-10-23T18:07:43.1161016+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a61c9c4b-78b1-45f4-b180-273d7979e382" />
    <UnitTestResult executionId="2a083885-1bf4-4b5b-862f-294950ef0bda" testId="b2b951d3-19c7-dbe9-e52b-4b27638bb30d" testName="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Load_Throws_WhenNamespaceMissing" computerName="WOODY" duration="00:00:00.0005073" startTime="2025-10-23T18:07:51.5534875+02:00" endTime="2025-10-23T18:07:51.5539628+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2a083885-1bf4-4b5b-862f-294950ef0bda" />
    <UnitTestResult executionId="f78bbab1-3550-4135-b18a-fdade52c9110" testId="4db3a0a8-ece1-dd11-e239-b64cdfcc07eb" testName="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests.Snapshot_Raw_And_Deserialize_Pattern" computerName="WOODY" duration="00:00:00.0077639" startTime="2025-10-23T18:07:43.1539041+02:00" endTime="2025-10-23T18:07:43.1618247+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f78bbab1-3550-4135-b18a-fdade52c9110">
      <Output>
        <ErrorInfo>
          <Message>Shouldly.ShouldAssertException : code&#xD;
    should contain (case insensitive comparison)&#xD;
"Task&lt;List&lt;UserListAsJson&gt;&gt; UserListAsJsonDeserializeAsync"&#xD;
    but was actually&#xD;
"using System;
using Microsoft.Data.SqlClient;

namespace Test.App.DataContext.StoredProcedures.Dbo
{..."</Message>
          <StackTrace>   at SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests.Snapshot_Raw_And_Deserialize_Pattern() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\CodeGeneration\StoredProcedureGeneratorSnapshotTests.cs:line 112&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
--- End of stack trace from previous location ---&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e25db951-b678-4c5b-879f-7638f1060c6d" testId="01feda20-8602-30ba-e317-89ca2962c0d5" testName="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Should_Substitute_Nested_Properties" computerName="WOODY" duration="00:00:00.0006472" startTime="2025-10-23T18:07:43.1905413+02:00" endTime="2025-10-23T18:07:43.1911256+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e25db951-b678-4c5b-879f-7638f1060c6d" />
    <UnitTestResult executionId="627819ad-24d3-4174-9a56-6095fab3437f" testId="317808e2-e09e-ff12-92b6-fe2348538b70" testName="SpocR.Tests.MinMaxTypingTests.MinMax_Literal_Typing_Should_Infer_Int_And_Decimal" computerName="WOODY" duration="00:00:00.0012267" startTime="2025-10-23T18:07:43.3417484+02:00" endTime="2025-10-23T18:07:43.3425767+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="627819ad-24d3-4174-9a56-6095fab3437f" />
    <UnitTestResult executionId="4d44a044-ebc3-4269-bbeb-a31164b0e046" testId="3474c809-aa61-c509-e2af-28fe246f1afb" testName="SpocR.Tests.StoredProcedureAstTests.ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper" computerName="WOODY" duration="00:00:00.0013866" startTime="2025-10-23T18:07:43.1503190+02:00" endTime="2025-10-23T18:07:43.1518330+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d44a044-ebc3-4269-bbeb-a31164b0e046">
      <Output>
        <ErrorInfo>
          <Message>Assert.Equal() Failure: Values differ&#xD;
Expected: 0&#xD;
Actual:   null</Message>
          <StackTrace>   at SpocR.Tests.StoredProcedureAstTests.ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\StoredProcedureAstTests.cs:line 21&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d6d96641-9da2-4014-ae16-b393ca36a3d3" testId="a353a595-4fa8-94a9-5365-731de7ea926e" testName="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_OnException_FailsAndSetsError" computerName="WOODY" duration="00:00:00.0003875" startTime="2025-10-23T18:07:43.1053464+02:00" endTime="2025-10-23T18:07:43.1056882+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d6d96641-9da2-4014-ae16-b393ca36a3d3" />
    <UnitTestResult executionId="9d1c8085-de8b-4c3f-af35-7978bcb1bb14" testId="301b701e-9b4c-224d-cf3a-b155b50376c4" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetime&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1153115+02:00" endTime="2025-10-23T18:07:43.1153377+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9d1c8085-de8b-4c3f-af35-7978bcb1bb14" />
    <UnitTestResult executionId="4e801b9c-ea2e-4a74-98d5-18129b6814ae" testId="b0c7c10e-5dc7-f793-2f0a-dd0a9c6f5a2c" testName="SpocR.Tests.VersionExtensionsTests.IsGreaterThan_Should_Return_True_When_Left_Is_Newer" computerName="WOODY" duration="00:00:00.0000333" startTime="2025-10-23T18:07:43.3572064+02:00" endTime="2025-10-23T18:07:43.3572335+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e801b9c-ea2e-4a74-98d5-18129b6814ae" />
    <UnitTestResult executionId="0f07f659-fa6f-4280-bc72-bf07373c7226" testId="5fdacca5-99f4-558c-74bd-f62a73208905" testName="SpocR.Tests.BuildSchemasFilteringTests.Allows_Only_Listed_Schema_Procedures" computerName="WOODY" duration="00:00:00.0025250" startTime="2025-10-23T18:07:43.1057774+02:00" endTime="2025-10-23T18:07:43.1083408+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0f07f659-fa6f-4280-bc72-bf07373c7226" />
    <UnitTestResult executionId="5253db15-242c-4826-b797-bb102151a445" testId="480b297a-def6-db2f-2744-da909d3cb419" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;nvarchar(50)&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0000009" startTime="2025-10-23T18:07:43.1164149+02:00" endTime="2025-10-23T18:07:43.1164325+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5253db15-242c-4826-b797-bb102151a445" />
    <UnitTestResult executionId="8873e4c9-3752-4101-829e-c6601fd393a0" testId="dd881a9b-e1cd-7eab-f579-a9dab9e17c3b" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some-value&quot;, expected: &quot;SomeValue&quot;)" computerName="WOODY" duration="00:00:00.0000019" startTime="2025-10-23T18:07:42.8775606+02:00" endTime="2025-10-23T18:07:42.8775786+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8873e4c9-3752-4101-829e-c6601fd393a0" />
    <UnitTestResult executionId="25692ed1-c0da-4fa0-9128-d27a8e169e01" testId="e903e852-c79e-a214-ffe0-1ccfc40d81ba" testName="SpocR.Tests.SpocRVNext.Diagnostics.JsonResultSetAuditTests.Audit_Flags_StringPlaceholders_ForNumeric" computerName="WOODY" duration="00:00:00.0012567" startTime="2025-10-23T18:07:43.1365417+02:00" endTime="2025-10-23T18:07:43.1372425+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="25692ed1-c0da-4fa0-9128-d27a8e169e01" />
    <UnitTestResult executionId="d5b62803-4b4c-4545-9fd7-2f8d3f473076" testId="2fe7ce78-23fd-f783-ef06-b74a29c9d28e" testName="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_Should_Read_All_Spt_Files" computerName="WOODY" duration="00:00:00.0028108" startTime="2025-10-23T18:07:43.2724393+02:00" endTime="2025-10-23T18:07:43.2752951+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5b62803-4b4c-4545-9fd7-2f8d3f473076" />
    <UnitTestResult executionId="1a11f9e3-22b0-41d0-a871-a613603394b5" testId="1d2f585a-a6ba-383d-5178-822ef8f6a99c" testName="SpocR.Tests.Versioning.BridgePolicyTests.DirectMajor_Blocked_Without_Override" computerName="WOODY" duration="00:00:00.0008490" startTime="2025-10-23T18:07:43.2629517+02:00" endTime="2025-10-23T18:07:43.2632469+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1a11f9e3-22b0-41d0-a871-a613603394b5" />
    <UnitTestResult executionId="315dac61-74ca-42ce-9e59-6bd635a735e1" testId="05f124a9-2672-d95a-714d-f62d89ff295b" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;smallint&quot;, expected: &quot;System.Data.DbType.Int16&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1169912+02:00" endTime="2025-10-23T18:07:43.1170160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="315dac61-74ca-42ce-9e59-6bd635a735e1" />
    <UnitTestResult executionId="84dba5be-23c9-46af-8766-0e8ec2b33f5c" testId="9b1b615f-4c6e-d64b-c943-4bab8f2711dd" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;image&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1158749+02:00" endTime="2025-10-23T18:07:43.1159052+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="84dba5be-23c9-46af-8766-0e8ec2b33f5c" />
    <UnitTestResult executionId="035fa86b-c988-40eb-a628-163ac17a63e8" testId="9851286f-27f2-aeb1-b243-6b3406fe5219" testName="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicExec AS BEGIN DECLARE &quot;···)" computerName="WOODY" duration="00:00:00.0000819" startTime="2025-10-23T18:07:43.1781409+02:00" endTime="2025-10-23T18:07:43.1782043+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="035fa86b-c988-40eb-a628-163ac17a63e8" />
    <UnitTestResult executionId="9f11294c-fc42-40f9-8298-ef52df360ec8" testId="6c7af3fb-534c-2a0b-e299-6bd1eabe0220" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;xml&quot;, expected: &quot;System.Data.DbType.Xml&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1163710+02:00" endTime="2025-10-23T18:07:43.1163876+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f11294c-fc42-40f9-8298-ef52df360ec8" />
    <UnitTestResult executionId="eed51627-c1f1-497d-b59b-546f3f3ffd50" testId="5a9f0f15-1a7e-4d62-e0d0-714dcfb24817" testName="SpocR.Tests.StoredProcedureJsonAstOnlyTests.CommentContaining_ForJson_Does_Not_Create_Json_ResultSet" computerName="WOODY" duration="00:00:00.0005765" startTime="2025-10-23T18:07:43.0055197+02:00" endTime="2025-10-23T18:07:43.0059926+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eed51627-c1f1-497d-b59b-546f3f3ffd50" />
    <UnitTestResult executionId="ca5e99af-9b50-46e9-bb78-9853bfa45a5c" testId="16ffffb7-faab-a91b-8378-1bb2bb8d37fd" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.MixedCaseTable_NormalizesToTableName" computerName="WOODY" duration="00:00:00.0020416" startTime="2025-10-23T18:07:43.3708549+02:00" endTime="2025-10-23T18:07:43.3728320+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca5e99af-9b50-46e9-bb78-9853bfa45a5c" />
    <UnitTestResult executionId="9c918f2b-a4a8-4d5e-8028-c24b7c003126" testId="9012aed6-d062-f70f-8c52-c6eb9b56b5ef" testName="SpocR.Tests.Cli.ExecAppendNormalizationTests.ProcedureWithOwnJsonAndExec_AppendsExecutedProcResultSets" computerName="WOODY" duration="00:00:00.0022609" startTime="2025-10-23T18:07:51.6007905+02:00" endTime="2025-10-23T18:07:51.6030613+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c918f2b-a4a8-4d5e-8028-c24b7c003126" />
    <UnitTestResult executionId="f626139e-1258-4de4-a1eb-1e33e7f31f95" testId="e5372233-516a-b67a-d9b1-8445078b12d0" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;varchar(10)&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0002949" startTime="2025-10-23T18:07:43.1141417+02:00" endTime="2025-10-23T18:07:43.1144402+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f626139e-1258-4de4-a1eb-1e33e7f31f95" />
    <UnitTestResult executionId="c48945d6-a270-4173-a87c-a608c8dad8d3" testId="2f809b1a-f266-2517-29e3-c5abc8a1939e" testName="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_StaticSql_ReturnsFirstBaseTable" computerName="WOODY" duration="00:00:00.0006600" startTime="2025-10-23T18:07:43.1782942+02:00" endTime="2025-10-23T18:07:43.1789179+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c48945d6-a270-4173-a87c-a608c8dad8d3" />
    <UnitTestResult executionId="c3c5246c-86af-4ed4-887d-c296ac831407" testId="94d5c953-51e1-24e8-fe8a-7d2a546f7be5" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests.Renames_Generic_ResultSet_Name_From_Table_In_Sql" computerName="WOODY" duration="00:00:00.0021820" startTime="2025-10-23T18:07:43.0772034+02:00" endTime="2025-10-23T18:07:43.0794024+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c3c5246c-86af-4ed4-887d-c296ac831407" />
    <UnitTestResult executionId="9ecf9366-be7b-47d8-8280-c43bf4bd86b0" testId="de08d421-69df-8e08-2c8d-a8eb920803d3" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;real&quot;, expected: &quot;System.Data.DbType.Single&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1161477+02:00" endTime="2025-10-23T18:07:43.1161759+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ecf9366-be7b-47d8-8280-c43bf4bd86b0" />
    <UnitTestResult executionId="13149483-ac2a-4ea8-9813-13656762113d" testId="e3c5ef77-90ab-2d1d-f3fb-122ef055422f" testName="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Verify_Should_Diff_After_Modification_Relaxed" computerName="WOODY" duration="00:00:00.0082233" startTime="2025-10-23T18:08:23.1608229+02:00" endTime="2025-10-23T18:08:23.1690254+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="13149483-ac2a-4ea8-9813-13656762113d" />
    <UnitTestResult executionId="98f8b5a1-ef4f-464a-b795-80ef0d69b6f4" testId="f1499054-d642-8412-6e83-846bc50af3ff" testName="SpocR.Tests.SchemaSnapshotStructureTests.UserDefinedTypeFiles_ShouldContain_BaseSqlTypeName" computerName="WOODY" duration="00:00:00.0002287" startTime="2025-10-23T18:07:51.6002813+02:00" endTime="2025-10-23T18:07:51.6004565+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98f8b5a1-ef4f-464a-b795-80ef0d69b6f4" />
    <UnitTestResult executionId="06081c98-1082-4aa3-b2ba-310816abce7b" testId="2fb4d325-f06a-b874-ed38-9180caa3966c" testName="SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests.Generates_Xml_Doc_For_Empty_Json_Model" computerName="WOODY" duration="00:00:00.0477601" startTime="2025-10-23T18:07:42.8073591+02:00" endTime="2025-10-23T18:07:42.8557742+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="06081c98-1082-4aa3-b2ba-310816abce7b">
      <Output>
        <ErrorInfo>
          <Message>System.NullReferenceException : Object reference not set to an instance of an object.</Message>
          <StackTrace>   at SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests.Generates_Xml_Doc_For_Empty_Json_Model() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\CodeGeneration\ModelGeneratorJsonEmptyModelTests.cs:line 83&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="26fccd42-4640-46a8-81db-0ea9e03fe8dc" testId="a613410a-d8da-581f-4276-abd2e99ca94d" testName="SpocR.Tests.JsonTypeMappingBasicTests.RowVersion_Should_Map_To_ByteArray" computerName="WOODY" duration="00:00:00.0031290" startTime="2025-10-23T18:07:43.3559970+02:00" endTime="2025-10-23T18:07:43.3561965+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26fccd42-4640-46a8-81db-0ea9e03fe8dc" />
    <UnitTestResult executionId="da9011fa-f469-45b5-ae2b-31e173dcfd0e" testId="3397ddfa-adaf-0155-6729-62e2656d6ea7" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some value&quot;, expected: &quot;SomeValue&quot;)" computerName="WOODY" duration="00:00:00.0000015" startTime="2025-10-23T18:07:42.8775134+02:00" endTime="2025-10-23T18:07:42.8775309+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da9011fa-f469-45b5-ae2b-31e173dcfd0e" />
    <UnitTestResult executionId="64a40535-fd7f-43fa-b4d3-7cee6a069e65" testId="2d3c9ad9-78ad-606e-8e0f-8d0243af77e9" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Fallback_To_String_For_Unknown" computerName="WOODY" duration="00:00:00.0000324" startTime="2025-10-23T18:07:43.1172514+02:00" endTime="2025-10-23T18:07:43.1172685+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="64a40535-fd7f-43fa-b4d3-7cee6a069e65" />
    <UnitTestResult executionId="b7bf2e97-b6dd-40aa-9b68-40b55c0ea036" testId="05e71bc8-d68d-b61c-7bba-2d4aefd8b274" testName="SpocR.Tests.Cli.FullSuiteJsonSummaryTests.FullSuite_Should_Populate_Test_Counters" computerName="WOODY" duration="00:00:04.6201123" startTime="2025-10-23T18:07:44.8380995+02:00" endTime="2025-10-23T18:07:49.4584893+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7bf2e97-b6dd-40aa-9b68-40b55c0ea036" />
    <UnitTestResult executionId="41b4c62a-cfa4-45fb-b755-a7e3c69d02c3" testId="d4b1079d-849e-d813-909e-4829c02daa34" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;decimal(18,2)&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" computerName="WOODY" duration="00:00:00.0000008" startTime="2025-10-23T18:07:43.1151362+02:00" endTime="2025-10-23T18:07:43.1151548+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="41b4c62a-cfa4-45fb-b755-a7e3c69d02c3" />
    <UnitTestResult executionId="48773f8c-d042-4f50-abc2-f0d1352f24eb" testId="9f09a054-e5b3-8418-76f1-e5e1eb95c936" testName="SpocR.Tests.SpocRVNext.Generators.ExtensionMethodReflectionTests.UserListAsync_ExtensionMethod_Present_And_ReturnsAggregateType" computerName="WOODY" duration="00:00:00.0038167" startTime="2025-10-23T18:07:51.5540772+02:00" endTime="2025-10-23T18:07:51.5578910+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48773f8c-d042-4f50-abc2-f0d1352f24eb" />
    <UnitTestResult executionId="af26f003-0bf6-4efc-8a74-30468404c144" testId="4a1176f9-6356-ff8f-9e36-a4eb0fb78171" testName="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Null_Model_Returns_Template" computerName="WOODY" duration="00:00:00.0000430" startTime="2025-10-23T18:07:43.1911709+02:00" endTime="2025-10-23T18:07:43.1911893+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="af26f003-0bf6-4efc-8a74-30468404c144" />
    <UnitTestResult executionId="f54ff4c6-d81c-4ae6-9962-a483c58f1e86" testId="506c0bb1-02f1-2e4f-0f6b-b767f3bc122b" testName="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder" computerName="WOODY" duration="00:00:00.0213353" startTime="2025-10-23T18:08:23.1121791+02:00" endTime="2025-10-23T18:08:23.1334156+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f54ff4c6-d81c-4ae6-9962-a483c58f1e86">
      <Output>
        <ErrorInfo>
          <Message>Assert.NotNull() Failure: Value is null</Message>
          <StackTrace>   at SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generators\UnifiedProcedureOrderingTests.cs:line 171&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b1db30d2-5037-4b51-a2b5-3e293411d50e" testId="54e27e23-77a3-3bf2-0b73-ca15f455dfed" testName="SpocR.Tests.CodeGeneration.ModelGeneratorMultiResultSetTests.Generates_Multiple_Result_Set_Models_With_Suffixes" computerName="WOODY" duration="00:00:00.0103943" startTime="2025-10-23T18:07:43.1373343+02:00" endTime="2025-10-23T18:07:43.1489793+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1db30d2-5037-4b51-a2b5-3e293411d50e" />
    <UnitTestResult executionId="270c5f09-df0a-4f49-a6b9-35a18bfd34ed" testId="4cb73cdd-aa3c-91d7-d5a8-46b312b364aa" testName="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests.Consolidated_Procedure_File_Does_Not_Duplicate_InputOutput_Records" computerName="WOODY" duration="00:00:00.0215265" startTime="2025-10-23T18:07:43.2760642+02:00" endTime="2025-10-23T18:07:43.2976580+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="270c5f09-df0a-4f49-a6b9-35a18bfd34ed" />
    <UnitTestResult executionId="7bb15710-89c7-4241-8c38-2f30dcbefed9" testId="f47f8ff1-50e0-e158-7f86-4409c94112c6" testName="SpocR.Tests.StoredProcedureAstTests.ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False" computerName="WOODY" duration="00:00:00.0003522" startTime="2025-10-23T18:07:43.1521441+02:00" endTime="2025-10-23T18:07:43.1522706+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bb15710-89c7-4241-8c38-2f30dcbefed9">
      <Output>
        <ErrorInfo>
          <Message>Assert.Single() Failure: The collection was empty</Message>
          <StackTrace>   at SpocR.Tests.StoredProcedureAstTests.ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\StoredProcedureAstTests.cs:line 43&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f555c066-01ca-4807-ae58-bc13947b9179" testId="9c3b9bd0-ef7c-c8d5-3e01-173d9fb3564c" testName="SpocR.Tests.SchemaSnapshotStructureTests.ExpandedSnapshot_ShouldContain_Types_Tables_Views_Directories" computerName="WOODY" duration="00:00:00.0002414" startTime="2025-10-23T18:07:51.6005456+02:00" endTime="2025-10-23T18:07:51.6007175+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f555c066-01ca-4807-ae58-bc13947b9179" />
    <UnitTestResult executionId="789a9bf4-51b1-48b3-b304-4ede0d9d5ade" testId="62eeeb7c-0a57-eb77-1ddc-9375639867e3" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;binary(50)&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1154515+02:00" endTime="2025-10-23T18:07:43.1154814+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="789a9bf4-51b1-48b3-b304-4ede0d9d5ade" />
    <UnitTestResult executionId="40471fe1-40d3-4571-ae8f-52c187cc132c" testId="9e4b9ec7-d511-587a-1ff1-dbe8a5a48da1" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;text&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1170975+02:00" endTime="2025-10-23T18:07:43.1171169+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40471fe1-40d3-4571-ae8f-52c187cc132c" />
    <UnitTestResult executionId="c16350b5-155f-4747-aa60-60ff9f86312c" testId="1838ac44-c6c3-b094-e5ab-ebf3fcf3a501" testName="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests.ThreeDuplicateResultSets_Produce_IncrementalSuffixes" computerName="WOODY" duration="00:00:00.0051889" startTime="2025-10-23T18:08:23.1382841+02:00" endTime="2025-10-23T18:08:23.1432296+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c16350b5-155f-4747-aa60-60ff9f86312c" />
    <UnitTestResult executionId="a32020b1-9095-4409-a285-2269dd1b028c" testId="69092e1a-47bd-364b-94b1-62e5fce0fb2e" testName="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;2.0.0&quot;, right: &quot;2.1.0&quot;, expectedSign: -1)" computerName="WOODY" duration="00:00:00.0001298" startTime="2025-10-23T18:07:43.3564545+02:00" endTime="2025-10-23T18:07:43.3565646+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a32020b1-9095-4409-a285-2269dd1b028c" />
    <UnitTestResult executionId="d516d9e5-9a08-488a-bc7c-c9c4bcd9182b" testId="83188dd6-8f54-e80d-3a24-e4070295391b" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;smalldatetime&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000012" startTime="2025-10-23T18:07:43.1150420+02:00" endTime="2025-10-23T18:07:43.1150594+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d516d9e5-9a08-488a-bc7c-c9c4bcd9182b" />
    <UnitTestResult executionId="b854456f-d204-4984-b190-4c0870c44326" testId="972e4b70-45c8-af01-3e2d-c4ec707fc4bc" testName="SpocR.Tests.Cli.JsonParserSelectStarTests.ForJson_WithExplicitAndStar_SetsFlagAndKeepsExplicitColumn" computerName="WOODY" duration="00:00:00.0004868" startTime="2025-10-23T18:07:43.3819988+02:00" endTime="2025-10-23T18:07:43.3824967+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b854456f-d204-4984-b190-4c0870c44326" />
    <UnitTestResult executionId="8c6cfa89-8dac-476e-bbd2-e22c2004f626" testId="fcb7e71b-5a80-1271-161f-5d30d657658f" testName="SpocR.Tests.Configuration.NamespaceResolverTests.Resolve_ReturnsExplicitNamespace" computerName="WOODY" duration="00:00:00.0000805" startTime="2025-10-23T18:07:43.3635459+02:00" endTime="2025-10-23T18:07:43.3635982+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c6cfa89-8dac-476e-bbd2-e22c2004f626" />
    <UnitTestResult executionId="98cdfe82-a204-4443-88a2-ddd8ea3b6608" testId="2b4d05b9-1745-e198-d25e-ffa5903aaba4" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;123abc&quot;, expected: &quot;_123abc&quot;)" computerName="WOODY" duration="00:00:00.0000079" startTime="2025-10-23T18:07:42.8773472+02:00" endTime="2025-10-23T18:07:42.8773714+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98cdfe82-a204-4443-88a2-ddd8ea3b6608" />
    <UnitTestResult executionId="57d9b641-544d-46e4-b3b1-be005a2af503" testId="077dd998-9e96-e06e-8c06-da4296faf010" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;time&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1159508+02:00" endTime="2025-10-23T18:07:43.1159685+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57d9b641-544d-46e4-b3b1-be005a2af503" />
    <UnitTestResult executionId="83621eed-7aef-4ad9-bf80-a791c624e070" testId="cc327d91-e1e0-e9f9-95c8-ee07000743e1" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetime2&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000008" startTime="2025-10-23T18:07:43.1170494+02:00" endTime="2025-10-23T18:07:43.1170670+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83621eed-7aef-4ad9-bf80-a791c624e070" />
    <UnitTestResult executionId="5a9bd6ed-3fe5-44dd-8d8d-70af1d72884c" testId="083cb890-ee03-5962-0cd5-9e8d1873b3d7" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;numeric(10,0)&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" computerName="WOODY" duration="00:00:00.0001177" startTime="2025-10-23T18:07:43.1144737+02:00" endTime="2025-10-23T18:07:43.1145820+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5a9bd6ed-3fe5-44dd-8d8d-70af1d72884c" />
    <UnitTestResult executionId="cb097fa3-3771-4e00-b4c5-ba36e97908ce" testId="4b90f7d9-4f50-df6f-1167-40d44f6fa4db" testName="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests.ReturnsJsonArray_False_Should_Use_Single_Object_Path" computerName="WOODY" duration="00:00:00.0043238" startTime="2025-10-23T18:07:51.5579994+02:00" endTime="2025-10-23T18:07:51.5623425+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb097fa3-3771-4e00-b4c5-ba36e97908ce" />
    <UnitTestResult executionId="17cf6bd0-ffa2-4a12-8b76-ac228c5b1bec" testId="91d4f3a6-3e74-068e-1531-235897e85a9e" testName="SpocR.Tests.Cli.TestCommandSummaryTests.CiValidate_Should_Write_TestSummaryJson" computerName="WOODY" duration="00:00:01.4547616" startTime="2025-10-23T18:07:43.3830237+02:00" endTime="2025-10-23T18:07:44.8378886+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17cf6bd0-ffa2-4a12-8b76-ac228c5b1bec" />
    <UnitTestResult executionId="10225c4e-05c0-4c30-83be-5f4ed2ba4b72" testId="bacb3668-e872-60bf-f20c-f38299f4a2c1" testName="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.0.1&quot;, right: &quot;1.0.0&quot;, expectedSign: 1)" computerName="WOODY" duration="00:00:00.0000012" startTime="2025-10-23T18:07:43.3566577+02:00" endTime="2025-10-23T18:07:43.3566781+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10225c4e-05c0-4c30-83be-5f4ed2ba4b72" />
    <UnitTestResult executionId="ad25e1ae-e1f6-4872-9ae4-e6593bcfd3b8" testId="eccb3c19-90d5-df28-fec2-559b439c390a" testName="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Load_Throws_WhenNamespaceInvalid" computerName="WOODY" duration="00:00:00.0028477" startTime="2025-10-23T18:07:51.5485456+02:00" endTime="2025-10-23T18:07:51.5514315+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ad25e1ae-e1f6-4872-9ae4-e6593bcfd3b8" />
    <UnitTestResult executionId="7c822ee9-d0f8-40ce-a298-0ce368266e4c" testId="4bfe9218-fd5b-2175-67f4-aefb242cb1e5" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some_value&quot;, expected: &quot;Some_value&quot;)" computerName="WOODY" duration="00:00:00.0000708" startTime="2025-10-23T18:07:42.8764404+02:00" endTime="2025-10-23T18:07:42.8764665+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7c822ee9-d0f8-40ce-a298-0ce368266e4c" />
    <UnitTestResult executionId="3fe1c0d5-b560-4e7e-8b48-3746e6565667" testId="6ae69cc6-71db-bbd7-37e0-d4b9e0090538" testName="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.SingleQuotedDottedAlias_Should_Bind_SourceColumn" computerName="WOODY" duration="00:00:00.0003468" startTime="2025-10-23T18:07:42.8959541+02:00" endTime="2025-10-23T18:07:42.8962133+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3fe1c0d5-b560-4e7e-8b48-3746e6565667" />
    <UnitTestResult executionId="8037cefa-e73e-42f9-b1ac-8e43f61cc171" testId="4b10f895-d52f-1024-073d-9c5db214bf2d" testName="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Only_Raw_For_NonJson" computerName="WOODY" duration="00:00:00.0034967" startTime="2025-10-23T18:07:43.0736693+02:00" endTime="2025-10-23T18:07:43.0770908+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8037cefa-e73e-42f9-b1ac-8e43f61cc171" />
    <UnitTestResult executionId="80e33577-9596-4f1b-9776-8e683aae9db7" testId="24151ffc-5de1-e54a-43da-706b2955e484" testName="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.Rebuild_Twice_Produces_Identical_Golden_Hashes" computerName="WOODY" duration="00:00:31.4821258" startTime="2025-10-23T18:07:51.6031569+02:00" endTime="2025-10-23T18:08:23.0855286+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80e33577-9596-4f1b-9776-8e683aae9db7">
      <Output>
        <ErrorInfo>
          <Message>Shouldly.ShouldAssertException : stdout&#xD;
    should contain (case insensitive comparison)&#xD;
"Generators succeeded"&#xD;
    but was actually&#xD;
"&#xD;
**************************************************&#xD;
Pulling database schema from database&#xD;
*******..."</Message>
          <StackTrace>   at SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.&lt;Rebuild_Twice_Produces_Identical_Golden_Hashes&gt;g__RunCli|1_0(&lt;&gt;c__DisplayClass1_0&amp;) in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\GoldenHash\GoldenHashPipelineDeterminismTests.cs:line 52&#xD;
   at SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.Rebuild_Twice_Produces_Identical_Golden_Hashes() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\GoldenHash\GoldenHashPipelineDeterminismTests.cs:line 58&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
--- End of stack trace from previous location ---&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e9bf877f-5ba8-4969-96bd-e20f3e29a7e7" testId="76430dec-c954-1d80-8f95-4eaf222aa34a" testName="SpocR.Tests.Configuration.NamespaceResolverTests.Resolve_IgnoresCsproj_WhenExplicitNamespaceProvided" computerName="WOODY" duration="00:00:00.0003529" startTime="2025-10-23T18:07:43.3636426+02:00" endTime="2025-10-23T18:07:43.3639846+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e9bf877f-5ba8-4969-96bd-e20f3e29a7e7" />
    <UnitTestResult executionId="877641f8-74fe-4050-94a2-30323a5fb600" testId="76cc152d-9128-1a77-d630-bb4717854660" testName="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: null, expected: null)" computerName="WOODY" duration="00:00:00.0001031" startTime="2025-10-23T18:07:42.8761498+02:00" endTime="2025-10-23T18:07:42.8762303+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="877641f8-74fe-4050-94a2-30323a5fb600" />
    <UnitTestResult executionId="695a41fc-c5a3-463b-b7eb-b1ff2a8cc561" testId="0f0e595c-aad5-2fb5-6227-12875099a268" testName="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber" computerName="WOODY" duration="00:00:00.0011065" startTime="2025-10-23T18:07:51.5881896+02:00" endTime="2025-10-23T18:07:51.5894171+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="695a41fc-c5a3-463b-b7eb-b1ff2a8cc561">
      <Output>
        <ErrorInfo>
          <Message>Assert.Contains() Failure: Sub-string not found&#xD;
String:    "// &lt;auto-generated/&gt;\r\n// SpocR v4.5 Bridg"···&#xD;
Not found: "public IReadOnlyList&lt;UserOrderHierarchyJs"···</Message>
          <StackTrace>   at SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generation\UnifiedResultTests.cs:line 32&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4e6992fa-d890-400e-94a6-136d520df9ef" testId="0c8893c4-1fbc-7190-5351-c18bf27d9b7e" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.DuplicateBaseTable_SubsequentGetsNumericSuffix" computerName="WOODY" duration="00:00:00.0018564" startTime="2025-10-23T18:07:43.3805353+02:00" endTime="2025-10-23T18:07:43.3818962+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e6992fa-d890-400e-94a6-136d520df9ef" />
    <UnitTestResult executionId="ebe745ad-4d8d-4b3c-bc55-28efb50da323" testId="9b64a487-6ea9-9d4a-c402-f30f35c197b3" testName="SpocR.Tests.StoredProcedureAstTests.NestedJson_Subquery_Should_Flag_IsNestedJson_On_Column" computerName="WOODY" duration="00:00:00.0009317" startTime="2025-10-23T18:07:43.1524893+02:00" endTime="2025-10-23T18:07:43.1532289+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ebe745ad-4d8d-4b3c-bc55-28efb50da323" />
    <UnitTestResult executionId="d8f1cee6-3502-416e-a36d-83a76063144e" testId="c96c8b6c-6f06-a3fc-01cf-95324dc73de8" testName="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Raw_Only_For_Json_Array" computerName="WOODY" duration="00:00:00.0031009" startTime="2025-10-23T18:07:43.0706129+02:00" endTime="2025-10-23T18:07:43.0735762+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8f1cee6-3502-416e-a36d-83a76063144e" />
    <UnitTestResult executionId="f7fa05fa-ca87-47ed-91d1-5b16dea998c0" testId="be498831-d023-dcad-bc2f-97e6ef1600ea" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;nchar(5)&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0000008" startTime="2025-10-23T18:07:43.1150920+02:00" endTime="2025-10-23T18:07:43.1151091+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f7fa05fa-ca87-47ed-91d1-5b16dea998c0" />
    <UnitTestResult executionId="b95e4160-848e-481d-9115-ae02add61374" testId="b033ceaa-57f8-13f5-6fc8-8b77eea00762" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetimeoffset&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1152379+02:00" endTime="2025-10-23T18:07:43.1152613+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b95e4160-848e-481d-9115-ae02add61374" />
    <UnitTestResult executionId="b6ad91d0-b0d1-44e9-8592-2b05fa1ca4ef" testId="3cdcd402-840c-6c6d-c6d7-c68ed6e2c1e9" testName="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests.DbContextGenerator_Generates_In_Dual_Mode" computerName="WOODY" duration="00:00:00.0260112" startTime="2025-10-23T18:07:43.2337955+02:00" endTime="2025-10-23T18:07:43.2600651+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6ad91d0-b0d1-44e9-8592-2b05fa1ca4ef" />
    <UnitTestResult executionId="b5db7172-5745-4979-9969-5ec8778318fd" testId="b3ca4710-9b87-bc92-04a1-398d85c1e339" testName="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_TryLoad_Is_CaseInsensitive" computerName="WOODY" duration="00:00:00.0006129" startTime="2025-10-23T18:07:43.2753953+02:00" endTime="2025-10-23T18:07:43.2759393+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5db7172-5745-4979-9969-5ec8778318fd" />
    <UnitTestResult executionId="4293d58e-9054-458b-85e3-eb0397e70b03" testId="a2bbdb73-4296-02f1-6508-f29c9db8ff8a" testName="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: &quot;&quot;, expected: &quot;&quot;)" computerName="WOODY" duration="00:00:00.0000691" startTime="2025-10-23T18:07:42.8776677+02:00" endTime="2025-10-23T18:07:42.8776851+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4293d58e-9054-458b-85e3-eb0397e70b03" />
    <UnitTestResult executionId="55e6a365-496a-4b77-aad6-699e93765d5d" testId="e65bc9e8-01dc-6764-6fb4-1db2483f7a6a" testName="SpocR.Tests.ColumnNormalizationTests.IdentityFlag_Should_Exist_Only_When_True" computerName="WOODY" duration="00:00:00.0005410" startTime="2025-10-23T18:07:51.5911544+02:00" endTime="2025-10-23T18:07:51.5916574+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="55e6a365-496a-4b77-aad6-699e93765d5d" />
    <UnitTestResult executionId="d8ef2a1a-0364-475a-87e0-5ef08eebc689" testId="f332cc25-7f1b-aaa8-c1a8-ec8029800fd8" testName="SpocR.Tests.StoredProcedureJsonAstOnlyTests.Legacy_Single_Column_Sentinel_Not_Upgraded_By_Default" computerName="WOODY" duration="00:00:00.0002252" startTime="2025-10-23T18:07:43.0073383+02:00" endTime="2025-10-23T18:07:43.0073654+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8ef2a1a-0364-475a-87e0-5ef08eebc689" />
    <UnitTestResult executionId="6f23eab4-642e-46e3-b3e7-6e26c59c9680" testId="0ce4aedd-c57b-4e35-70bf-ca3db5c25084" testName="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: &quot;Hello&quot;, expected: &quot;hello&quot;)" computerName="WOODY" duration="00:00:00.0000255" startTime="2025-10-23T18:07:42.8762786+02:00" endTime="2025-10-23T18:07:42.8763065+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f23eab4-642e-46e3-b3e7-6e26c59c9680" />
    <UnitTestResult executionId="6a4df312-19df-4524-ba0d-7187c4844c92" testId="0375fd74-9a8b-f2fe-074c-ebdb26cbec16" testName="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_TryLoad_Returns_Content_When_Found" computerName="WOODY" duration="00:00:00.0084099" startTime="2025-10-23T18:07:43.2634845+02:00" endTime="2025-10-23T18:07:43.2719517+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a4df312-19df-4524-ba0d-7187c4844c92" />
    <UnitTestResult executionId="fdf8821a-436f-4377-90f6-287b00716376" testId="fa663b88-06f2-29a7-2d32-aa061ba29ef2" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;char(5)&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0000008" startTime="2025-10-23T18:07:43.1163052+02:00" endTime="2025-10-23T18:07:43.1163368+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fdf8821a-436f-4377-90f6-287b00716376" />
    <UnitTestResult executionId="57d902c7-219a-41f5-aa28-a0003d1d2395" testId="2fca1487-0a5d-7401-1ab7-2def05861f0d" testName="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingDiagnostics.Dump_Mixed_And_Wrapper_Generated_Code" computerName="WOODY" duration="00:00:00.0158990" startTime="2025-10-23T18:07:43.1173388+02:00" endTime="2025-10-23T18:07:43.1308593+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57d902c7-219a-41f5-aa28-a0003d1d2395" />
    <UnitTestResult executionId="376d0026-126a-4c2b-8b97-12241314cdc0" testId="a44ed467-7c8e-f860-b089-c8dec15b1778" testName="SpocR.Tests.Versioning.BridgePolicyTests.DirectMajor_Allowed_With_Override" computerName="WOODY" duration="00:00:00.0000992" startTime="2025-10-23T18:07:43.2633462+02:00" endTime="2025-10-23T18:07:43.2633760+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="376d0026-126a-4c2b-8b97-12241314cdc0" />
    <UnitTestResult executionId="64c64727-5230-4428-9433-c321936a2c2c" testId="e0cc3e73-e902-f987-da02-02f56a2be4a8" testName="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.GeneratesFiles_WithStubProvider" computerName="WOODY" duration="00:00:00.0100579" startTime="2025-10-23T18:07:43.1628063+02:00" endTime="2025-10-23T18:07:43.1719747+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="64c64727-5230-4428-9433-c321936a2c2c" />
    <UnitTestResult executionId="04a3432e-54ee-4f33-909f-294091c9fae8" testId="d567d2be-f35e-63a0-3d7c-f8c96bc88c81" testName="SpocR.Tests.Configuration.EnvConfigurationTests.Invalid_Mode_Throws" computerName="WOODY" duration="00:00:00.0013542" startTime="2025-10-23T18:07:42.7323963+02:00" endTime="2025-10-23T18:07:42.7324283+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04a3432e-54ee-4f33-909f-294091c9fae8" />
    <UnitTestResult executionId="2c32ec07-5b0b-42bd-be68-bc99522552fa" testId="cf63d430-d354-c4e6-5daa-9f5dfbf3671b" testName="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests.Interceptor_Captures_Error_On_Failure" computerName="WOODY" duration="00:00:00.0004173" startTime="2025-10-23T18:08:23.0885586+02:00" endTime="2025-10-23T18:08:23.0889397+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c32ec07-5b0b-42bd-be68-bc99522552fa" />
    <UnitTestResult executionId="881be78e-724f-4050-8d32-e0d29087e2c6" testId="7a714aed-d456-55fd-bd67-60e0f0d9e9b1" testName="SpocR.Tests.Configuration.EnvConfigurationTests.LegacyMode_IgnoresSpocrJsonConnectionString_ForGeneratorProperties" computerName="WOODY" duration="00:00:00.0013083" startTime="2025-10-23T18:07:42.7508494+02:00" endTime="2025-10-23T18:07:42.7520737+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="881be78e-724f-4050-8d32-e0d29087e2c6" />
    <UnitTestResult executionId="47c20654-4ff8-4af6-81e9-f898904e44d1" testId="0d2bfa2d-9728-96b2-5669-1ea18b160d93" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;uniqueidentifier&quot;, expected: &quot;System.Data.DbType.Guid&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1160111+02:00" endTime="2025-10-23T18:07:43.1160309+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47c20654-4ff8-4af6-81e9-f898904e44d1" />
    <UnitTestResult executionId="332535e1-e635-4c8d-9fe2-aa05e2af51ad" testId="860d8f71-1ac3-4b2f-ffb5-d78f329d024d" testName="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests.MixedProcedure_Should_Append_Target_ResultSets_After_Own" computerName="WOODY" duration="00:00:00.0022607" startTime="2025-10-23T18:07:43.3612600+02:00" endTime="2025-10-23T18:07:43.3634622+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="332535e1-e635-4c8d-9fe2-aa05e2af51ad" />
    <UnitTestResult executionId="901ef806-0b4e-4db4-92c6-e800f48a44ce" testId="de06310c-12e3-3ab3-c21f-e512eb124502" testName="SpocR.Tests.Cli.JsonParserV5InferenceTests.JsonQuery_Function_Should_Set_NvarcharMax_And_Nullable" computerName="WOODY" duration="00:00:00.0009608" startTime="2025-10-23T18:08:23.1852254+02:00" endTime="2025-10-23T18:08:23.1861816+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="901ef806-0b4e-4db4-92c6-e800f48a44ce" />
    <UnitTestResult executionId="338575cf-eb88-4b57-872f-bcdfa00fa23d" testId="9e8e7463-a219-bbba-6ec2-ed03f1309fe7" testName="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureTemplateExtensionsTests.UnifiedProcedureTemplate_Has_Wrapper_And_Extension_With_New_Naming" computerName="WOODY" duration="00:00:00.0005455" startTime="2025-10-23T18:08:23.0890136+02:00" endTime="2025-10-23T18:08:23.0895837+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="338575cf-eb88-4b57-872f-bcdfa00fa23d" />
    <UnitTestResult executionId="e582fbe9-ffec-4c16-ae8a-b2284c5b6699" testId="463521a5-20ef-091c-7303-266b24a7bb63" testName="SpocR.Tests.StoredProcedureJsonAstOnlyTests.ForJsonPath_With_WithoutArrayWrapper_Detected_As_Single_Object" computerName="WOODY" duration="00:00:00.0005356" startTime="2025-10-23T18:07:43.0062906+02:00" endTime="2025-10-23T18:07:43.0068177+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e582fbe9-ffec-4c16-ae8a-b2284c5b6699" />
    <UnitTestResult executionId="3766a90e-c364-4727-9a38-c083e6b53a6e" testId="1c28a542-9d97-af13-23b5-01384ece44f4" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;tinyint&quot;, expected: &quot;System.Data.DbType.Byte&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1168248+02:00" endTime="2025-10-23T18:07:43.1168572+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3766a90e-c364-4727-9a38-c083e6b53a6e" />
    <UnitTestResult executionId="9dfa5247-58b0-48a4-b163-5c1508a36582" testId="2e870443-0205-bb36-8c9c-4e6ecdfe0492" testName="SpocR.Tests.Configuration.EnvConfigurationTests.OutputDir_RespectsOverride" computerName="WOODY" duration="00:00:00.0011913" startTime="2025-10-23T18:07:42.7341130+02:00" endTime="2025-10-23T18:07:42.7352724+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9dfa5247-58b0-48a4-b163-5c1508a36582" />
    <UnitTestResult executionId="c85d3a76-3546-4270-8177-40af3a5de168" testId="d9cf9315-c5e1-56b0-3017-b933246b67f5" testName="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: &quot;&quot;, expected: &quot;&quot;)" computerName="WOODY" duration="00:00:00.0023420" startTime="2025-10-23T18:07:42.8737596+02:00" endTime="2025-10-23T18:07:42.8760950+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c85d3a76-3546-4270-8177-40af3a5de168" />
    <UnitTestResult executionId="b53b4c22-cb61-4811-b722-77aec3829be1" testId="7ad83542-46c9-ca67-5436-1407c0205341" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;ntext&quot;, expected: &quot;System.Data.DbType.String&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1162274+02:00" endTime="2025-10-23T18:07:43.1162546+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b53b4c22-cb61-4811-b722-77aec3829be1" />
    <UnitTestResult executionId="8f7afdb6-3f4d-4a9a-abfb-ae12d88ef4ce" testId="ca137924-1ddb-c9c8-818d-6c9a27bff3a1" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests.ReturnsEmpty_WhenNoSnapshot" computerName="WOODY" duration="00:00:00.0040876" startTime="2025-10-23T18:07:42.8562068+02:00" endTime="2025-10-23T18:07:42.8599631+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f7afdb6-3f4d-4a9a-abfb-ae12d88ef4ce" />
    <UnitTestResult executionId="c353a7ac-5744-4339-b3f0-aaa0c3e2167f" testId="40a71585-36d7-a2bd-e89b-e246ddf34cc0" testName="SpocR.Tests.WrapperForwardingMixedTests.Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set" computerName="WOODY" duration="00:00:00.0019307" startTime="2025-10-23T18:07:43.1331042+02:00" endTime="2025-10-23T18:07:43.1359127+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c353a7ac-5744-4339-b3f0-aaa0c3e2167f">
      <Output>
        <ErrorInfo>
          <Message>System.NullReferenceException : Object reference not set to an instance of an object.</Message>
          <StackTrace>   at SpocR.DataContext.DbContext.ListAsync[T](String queryString, List`1 parameters, CancellationToken cancellationToken, AppSqlTransaction transaction) in c:\Projekte\GitHub\spocr\src\DataContext\DbContext.cs:line 99&#xD;
   at SpocR.Managers.SchemaManager.ListAsync(ConfigurationModel config, Boolean noCache, CancellationToken cancellationToken) in c:\Projekte\GitHub\spocr\src\Managers\SchemaManager.cs:line 54&#xD;
   at SpocR.Tests.WrapperForwardingMixedTests.RunSchemaManagerAsync(FakeDbContext db) in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\WrapperForwardingMixedTests.cs:line 91&#xD;
   at SpocR.Tests.WrapperForwardingMixedTests.Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\WrapperForwardingMixedTests.cs:line 113&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e088d041-309f-44ac-8317-de068d947774" testId="c2e83a33-2588-218c-5f35-f8d49dbdca6a" testName="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests.NonSchemaQualified_RecordAsJson_Should_Not_Set_SchemaName" computerName="WOODY" duration="00:00:00.0004653" startTime="2025-10-23T18:08:23.1347416+02:00" endTime="2025-10-23T18:08:23.1351792+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e088d041-309f-44ac-8317-de068d947774" />
    <UnitTestResult executionId="a0dfc9e6-bcf5-4728-8f4c-7abbd9e16048" testId="f03e3ae9-c73e-8bc9-d2c8-98a5d6052f22" testName="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.0.0&quot;, right: &quot;1.0.0&quot;, expectedSign: 0)" computerName="WOODY" duration="00:00:00.0000978" startTime="2025-10-23T18:07:43.3563143+02:00" endTime="2025-10-23T18:07:43.3564147+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0dfc9e6-bcf5-4728-8f4c-7abbd9e16048" />
    <UnitTestResult executionId="ae6bb730-7319-420d-9f6b-8cc9d3247c6c" testId="3e220517-5b74-1ea3-1e82-9d770d270225" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;date&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1153813+02:00" endTime="2025-10-23T18:07:43.1154069+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae6bb730-7319-420d-9f6b-8cc9d3247c6c" />
    <UnitTestResult executionId="be08891a-7f77-401f-b075-4c1fdc0ac5f7" testId="a0d0c1ff-cd08-fcdc-baab-c9f24e4ac852" testName="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.PreservesOriginalNames_NoRenaming" computerName="WOODY" duration="00:00:00.0036167" startTime="2025-10-23T18:07:43.1720855+02:00" endTime="2025-10-23T18:07:43.1756361+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be08891a-7f77-401f-b075-4c1fdc0ac5f7" />
    <UnitTestResult executionId="f94a74f1-6417-4d40-96da-47270020876b" testId="0683c4b1-c463-1781-e089-d2667a3d3163" testName="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests.GoldenSnapshot_DoubleRun_IsStable" computerName="WOODY" duration="00:00:00.0421221" startTime="2025-10-23T18:07:43.1914531+02:00" endTime="2025-10-23T18:07:43.2336246+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f94a74f1-6417-4d40-96da-47270020876b" />
    <UnitTestResult executionId="7c12b47b-b151-486b-ba2b-5524e0c29ef5" testId="b41531c6-90a7-6477-2545-450ac00f98ca" testName="SpocR.Tests.Versioning.VersionStabilityTests.Build_Twice_ShouldProduceSameAssemblyVersion_WhenNoTagChanges" computerName="WOODY" duration="00:00:02.0889018" startTime="2025-10-23T18:07:49.4593732+02:00" endTime="2025-10-23T18:07:51.5482944+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7c12b47b-b151-486b-ba2b-5524e0c29ef5" />
    <UnitTestResult executionId="ab217928-bb85-48a0-a7f2-6984ea2e326a" testId="aa5d8e47-c4af-79c5-5177-950abc5965a5" testName="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Verify_Should_Return_Strict_ExitCode_When_Env_Set" computerName="WOODY" duration="00:00:00.0100340" startTime="2025-10-23T18:08:23.1433230+02:00" endTime="2025-10-23T18:08:23.1534138+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ab217928-bb85-48a0-a7f2-6984ea2e326a" />
    <UnitTestResult executionId="d40a8d93-fe1d-4e1c-ad68-8100614dc10e" testId="8a0d999a-0aac-c38a-7d4b-1e873169211e" testName="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.1.0&quot;, right: &quot;1.0.5&quot;, expectedSign: 1)" computerName="WOODY" duration="00:00:00.0000032" startTime="2025-10-23T18:07:43.3566021+02:00" endTime="2025-10-23T18:07:43.3566240+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d40a8d93-fe1d-4e1c-ad68-8100614dc10e" />
    <UnitTestResult executionId="ca413f83-5642-48e3-8743-e5d834f6bf61" testId="58d3a6f5-da27-4dc1-2c46-076a7427d9c9" testName="SpocR.Tests.SpocRVNext.Generation.GenerationDeterminismTests.RepeatedRuns_AreDeterministic_ForProceduresAndInputs" computerName="WOODY" duration="00:00:00.0099112" startTime="2025-10-23T18:08:23.1691485+02:00" endTime="2025-10-23T18:08:23.1791185+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca413f83-5642-48e3-8743-e5d834f6bf61" />
    <UnitTestResult executionId="d8ce0940-3980-4859-8fcc-bd869b55db85" testId="6775043c-8cd9-ca63-0cbf-d18ed15fc231" testName="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_CapturesOutputParameters" computerName="WOODY" duration="00:00:00.0022487" startTime="2025-10-23T18:07:43.1036111+02:00" endTime="2025-10-23T18:07:43.1052807+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8ce0940-3980-4859-8fcc-bd869b55db85" />
    <UnitTestResult executionId="569f001e-1ca2-47c0-a625-dc84e4af196c" testId="f47d4c70-e88f-c8dc-b372-9a858bbb5fae" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;bit&quot;, expected: &quot;System.Data.DbType.Boolean&quot;)" computerName="WOODY" duration="00:00:00.0000006" startTime="2025-10-23T18:07:43.1171452+02:00" endTime="2025-10-23T18:07:43.1171620+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="569f001e-1ca2-47c0-a625-dc84e4af196c" />
    <UnitTestResult executionId="6f417820-f44b-4573-b96d-c3f7a196b082" testId="e99cbba1-3087-0d95-6432-25bc7a15cbc5" testName="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Resolve_ReturnsExplicitNamespace_WhenSPOCR_NAMESPACE_Set" computerName="WOODY" duration="00:00:00.0019009" startTime="2025-10-23T18:07:51.5515844+02:00" endTime="2025-10-23T18:07:51.5533908+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f417820-f44b-4573-b96d-c3f7a196b082" />
    <UnitTestResult executionId="7e4f9da0-4da8-4d68-808b-97801eae6243" testId="c2657d5f-1ee3-cbda-b983-4e693e7a760a" testName="SpocR.Tests.JournalMetricsTypingTests.Aggregates_And_Computed_Addition_Should_Set_Flags" computerName="WOODY" duration="00:00:00.0059264" startTime="2025-10-23T18:07:43.1838145+02:00" endTime="2025-10-23T18:07:43.1897161+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e4f9da0-4da8-4d68-808b-97801eae6243" />
    <UnitTestResult executionId="a5e2ff5e-8fc6-4e1a-a80c-86531ba9dda0" testId="52775da7-8070-eb26-b5b8-0b197d2d843d" testName="SpocR.Tests.Configuration.EnvConfigurationTests.Precedence_CLI_over_ENV_over_DotEnv" computerName="WOODY" duration="00:00:00.0009505" startTime="2025-10-23T18:07:42.7353490+02:00" endTime="2025-10-23T18:07:42.7362459+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a5e2ff5e-8fc6-4e1a-a80c-86531ba9dda0" />
    <UnitTestResult executionId="4a193571-8852-496e-9793-1eb15ced4bde" testId="01c3fc25-0ff4-ce2f-2f43-51b9e87b4ea7" testName="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests.IdentityRecordAsJson_FunctionCall_Should_Set_IsRecordAsJson_Flag" computerName="WOODY" duration="00:00:00.0011121" startTime="2025-10-23T18:08:23.1338142+02:00" endTime="2025-10-23T18:08:23.1346718+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a193571-8852-496e-9793-1eb15ced4bde" />
    <UnitTestResult executionId="d9ccd384-af96-49bb-9efb-ccc152c26d2e" testId="035b84f3-3f34-beec-d335-657098393984" testName="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicWithExecParen AS BEGIN&quot;···)" computerName="WOODY" duration="00:00:00.0000027" startTime="2025-10-23T18:07:43.1782354+02:00" endTime="2025-10-23T18:07:43.1782523+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d9ccd384-af96-49bb-9efb-ccc152c26d2e" />
    <UnitTestResult executionId="d338a1de-2461-4c25-b828-389174242234" testId="0c0df242-24d2-4a48-dc00-f38e36d13a48" testName="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Should_Substitute_TopLevel_Properties" computerName="WOODY" duration="00:00:00.0005095" startTime="2025-10-23T18:07:43.1903337+02:00" endTime="2025-10-23T18:07:43.1903601+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d338a1de-2461-4c25-b828-389174242234" />
    <UnitTestResult executionId="9c21c0d3-9c26-477a-810b-524b0487af97" testId="0eaf6ae6-00c1-698a-2e63-817926873ce4" testName="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Raw_Only_For_Json_Single" computerName="WOODY" duration="00:00:00.0632336" startTime="2025-10-23T18:07:43.0074563+02:00" endTime="2025-10-23T18:07:43.0704566+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c21c0d3-9c26-477a-810b-524b0487af97" />
    <UnitTestResult executionId="b8282c4d-3239-4533-8b4f-b08d27c73f70" testId="8cdb6bae-2565-9285-033a-8823738e4b13" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.UnparsableSql_FallsBack_GenericNamesRemain" computerName="WOODY" duration="00:00:00.0071370" startTime="2025-10-23T18:07:43.3729187+02:00" endTime="2025-10-23T18:07:43.3800179+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b8282c4d-3239-4533-8b4f-b08d27c73f70" />
    <UnitTestResult executionId="59fd54ef-62be-4f8c-9285-d56a90838dd8" testId="4ac4979c-c2d2-4dea-4d0b-9b130754635e" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests.Duplicate_Table_Uses_Suffix_For_Subsequent" computerName="WOODY" duration="00:00:00.0083865" startTime="2025-10-23T18:07:43.0794745+02:00" endTime="2025-10-23T18:07:43.0878705+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="59fd54ef-62be-4f8c-9285-d56a90838dd8" />
    <UnitTestResult executionId="0fd47487-0f07-498e-817a-92a61fd24ddb" testId="e92b4fad-f129-dc66-08eb-fa8cc18944fd" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;bigint&quot;, expected: &quot;System.Data.DbType.Int64&quot;)" computerName="WOODY" duration="00:00:00.0000030" startTime="2025-10-23T18:07:43.1149819+02:00" endTime="2025-10-23T18:07:43.1150040+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0fd47487-0f07-498e-817a-92a61fd24ddb" />
    <UnitTestResult executionId="60dd8782-5f43-428d-bf51-45efda4713f7" testId="18604c25-f454-22fb-3c22-192b085f8fa2" testName="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: &quot;hello&quot;, expected: &quot;Hello&quot;)" computerName="WOODY" duration="00:00:00.0000822" startTime="2025-10-23T18:07:42.8776205+02:00" endTime="2025-10-23T18:07:42.8776382+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="60dd8782-5f43-428d-bf51-45efda4713f7" />
    <UnitTestResult executionId="e0f5f49b-c1fa-419a-a076-504b51a30e7e" testId="5efbdec8-005e-d1e9-8e12-e9d58f7e50d0" testName="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.MultiResult_FirstRenamed_SecondGetsSuffix" computerName="WOODY" duration="00:00:00.0066527" startTime="2025-10-23T18:07:43.3640612+02:00" endTime="2025-10-23T18:07:43.3707478+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e0f5f49b-c1fa-419a-a076-504b51a30e7e" />
    <UnitTestResult executionId="3ae5b4d1-a3cf-4f66-9b70-38b414f1cf2e" testId="76928d9a-8d02-6f2f-edc6-a9e3bfc149cf" testName="SpocR.Tests.Infrastructure.ExitCodesTests.ExitCodes_ShouldBeUnique" computerName="WOODY" duration="00:00:00.0010036" startTime="2025-10-23T18:07:43.1085866+02:00" endTime="2025-10-23T18:07:43.1095465+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ae5b4d1-a3cf-4f66-9b70-38b414f1cf2e" />
    <UnitTestResult executionId="984371c4-6d9c-48a3-a44e-b3778c9087b5" testId="72357617-4107-7fe2-c7b5-2f9787d29913" testName="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_WithoutEnvFile_Throws" computerName="WOODY" duration="00:00:00.0042226" startTime="2025-10-23T18:07:42.7316043+02:00" endTime="2025-10-23T18:07:42.7317761+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="984371c4-6d9c-48a3-a44e-b3778c9087b5" />
    <UnitTestResult executionId="af9b3fae-da82-483a-901a-7a10775094e7" testId="ccd4bbdb-4e2e-0b84-54eb-71b690067dd2" testName="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;spocr generate command&quot;, expected: &quot;SpocrGenerateCommand&quot;)" computerName="WOODY" duration="00:00:00.0000026" startTime="2025-10-23T18:07:42.8774165+02:00" endTime="2025-10-23T18:07:42.8774353+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="af9b3fae-da82-483a-901a-7a10775094e7" />
    <UnitTestResult executionId="5b9a58b3-8175-480b-9c91-9bf4ba35a59c" testId="83b97a31-3ea9-fb05-5592-715f3964fd2b" testName="SpocR.Tests.VersionExtensionsTests.Equals_Should_Ignore_Revision_Component" computerName="WOODY" duration="00:00:00.0000775" startTime="2025-10-23T18:07:43.3567273+02:00" endTime="2025-10-23T18:07:43.3567494+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5b9a58b3-8175-480b-9c91-9bf4ba35a59c" />
    <UnitTestResult executionId="2f7a31af-82fb-4949-aa55-8ff7908bad29" testId="80e37b89-41d1-9d31-c1ed-01ae1a9c344f" testName="SpocR.Tests.SpocRVNext.Generators.JsonResultSetRowVersionRoundtripTests.RowVersion_Should_Map_To_ByteArray_And_Deserialize_From_Base64" computerName="WOODY" duration="00:00:00.0079333" startTime="2025-10-23T18:07:51.5695708+02:00" endTime="2025-10-23T18:07:51.5775657+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f7a31af-82fb-4949-aa55-8ff7908bad29" />
    <UnitTestResult executionId="2edc1c59-46d0-4b7d-befb-c6d955581b14" testId="07fdf977-fbd0-abf9-9019-02bc3d888e48" testName="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests.Interceptor_Receives_Before_And_After_With_Duration" computerName="WOODY" duration="00:00:00.0027352" startTime="2025-10-23T18:08:23.0863940+02:00" endTime="2025-10-23T18:08:23.0884901+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2edc1c59-46d0-4b7d-befb-c6d955581b14" />
    <UnitTestResult executionId="6c37ad23-76b2-4ea2-9176-fb831cea1ef5" testId="462ee968-99c3-a0f3-3435-585b69de251f" testName="SpocR.Tests.ColumnNormalizationTests.PrecisionScale_Should_Appear_As_Paired_For_Decimals" computerName="WOODY" duration="00:00:00.0004033" startTime="2025-10-23T18:07:51.5921667+02:00" endTime="2025-10-23T18:07:51.5925483+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6c37ad23-76b2-4ea2-9176-fb831cea1ef5" />
    <UnitTestResult executionId="57ec25e7-d3ff-49eb-b32d-fd0910f94629" testId="97578902-8424-35bc-2989-bf55d034a8f4" testName="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_FallsBackToSpocrJson_WhenEnvMissing" computerName="WOODY" duration="00:00:00.0134614" startTime="2025-10-23T18:07:42.7372383+02:00" endTime="2025-10-23T18:07:42.7507195+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57ec25e7-d3ff-49eb-b32d-fd0910f94629" />
    <UnitTestResult executionId="7f6916ce-6740-4dd2-8b87-5d803418239f" testId="d0035af6-ff30-774c-5ae8-8558b88a4f35" testName="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_UsesEnvConnectionString_IfPresent" computerName="WOODY" duration="00:00:00.0008794" startTime="2025-10-23T18:07:42.7363182+02:00" endTime="2025-10-23T18:07:42.7371678+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7f6916ce-6740-4dd2-8b87-5d803418239f" />
    <UnitTestResult executionId="0fe5a55d-868d-4a6a-98c7-0c6f77980a28" testId="1940b804-6796-bddf-6473-11b60014ccf8" testName="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser" computerName="WOODY" duration="00:00:00.0125276" startTime="2025-10-23T18:07:42.8962813+02:00" endTime="2025-10-23T18:07:42.9097276+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0fe5a55d-868d-4a6a-98c7-0c6f77980a28">
      <Output>
        <ErrorInfo>
          <Message>Shouldly.ShouldAssertException : accountId.SqlTypeName&#xD;
    should be null but was&#xD;
"int"</Message>
          <StackTrace>   at SpocR.Tests.Cli.JsonParserDotAliasBindingTests.DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\Cli\JsonParserDotAliasBindingTests.cs:line 49&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="805c64c4-380e-4942-827b-bd0109f38654" testId="443b1fbf-3a37-93c0-372d-99140bd34240" testName="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests.PureWrapper_Should_Forward_All_Target_ResultSets" computerName="WOODY" duration="00:00:00.0042876" startTime="2025-10-23T18:07:43.3573894+02:00" endTime="2025-10-23T18:07:43.3611766+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="805c64c4-380e-4942-827b-bd0109f38654" />
    <UnitTestResult executionId="ca7ea998-1671-47de-abfa-fa01cadddd43" testId="3770c957-5a49-2af5-37b4-087b1bc86866" testName="SpocR.Tests.Infrastructure.ExitCodesTests.ExitCodeValues_ShouldMatchDocumentation" computerName="WOODY" duration="00:00:00.0000953" startTime="2025-10-23T18:07:43.1084366+02:00" endTime="2025-10-23T18:07:43.1085165+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca7ea998-1671-47de-abfa-fa01cadddd43" />
    <UnitTestResult executionId="4e437009-f26d-4bda-8e2f-0954724cf014" testId="7b8f742e-6bda-6acd-1c78-6f0f20470a2e" testName="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests.ReturnsJsonArray_True_Should_Use_List_Deserialize_Path" computerName="WOODY" duration="00:00:00.0029572" startTime="2025-10-23T18:07:51.5624232+02:00" endTime="2025-10-23T18:07:51.5653537+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e437009-f26d-4bda-8e2f-0954724cf014" />
    <UnitTestResult executionId="b1e95ae8-5124-4787-9996-547dc4981a5c" testId="8391dc21-5f23-6ab1-605d-c765aab8f25f" testName="SpocR.Tests.Cli.StatusFindAsJsonAstTests.StatusFindAsJson_FunctionSelect_ForJsonColumnsExtracted" computerName="WOODY" duration="00:00:00.0103611" startTime="2025-10-23T18:07:51.5780813+02:00" endTime="2025-10-23T18:07:51.5880693+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1e95ae8-5124-4787-9996-547dc4981a5c" />
    <UnitTestResult executionId="ac1c9ecc-fccb-4608-a3e6-1962fffe3ad3" testId="14217d24-bad4-b961-96a3-fc1d927b4ca8" testName="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: null, expected: null)" computerName="WOODY" duration="00:00:00.0000022" startTime="2025-10-23T18:07:42.8777154+02:00" endTime="2025-10-23T18:07:42.8777326+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac1c9ecc-fccb-4608-a3e6-1962fffe3ad3" />
    <UnitTestResult executionId="b5babdae-b2b0-4fbe-bddc-e6499f43f04b" testId="96ab95f0-0323-541a-5e49-b406ed241429" testName="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_MultiResult_PopulatesBothLists" computerName="WOODY" duration="00:00:00.0037957" startTime="2025-10-23T18:07:43.0991960+02:00" endTime="2025-10-23T18:07:43.1029932+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5babdae-b2b0-4fbe-bddc-e6499f43f04b" />
    <UnitTestResult executionId="d98ec76c-8a38-44ca-8617-146cae7ae71c" testId="b3dc3968-996d-860e-7920-c40721303f6f" testName="SpocR.Tests.JsonTypeMappingBasicTests.OptionalRef_Should_Be_Nullable_Int" computerName="WOODY" duration="00:00:00.0007802" startTime="2025-10-23T18:07:43.3521905+02:00" endTime="2025-10-23T18:07:43.3530366+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d98ec76c-8a38-44ca-8617-146cae7ae71c">
      <Output>
        <ErrorInfo>
          <Message>optionalRef sollte als nullable markiert sein</Message>
          <StackTrace>   at SpocR.Tests.JsonTypeMappingBasicTests.OptionalRef_Should_Be_Nullable_Int() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\JsonTypeMappingBasicTests.cs:line 42&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56be4138-10da-4440-8c7b-41eaa6cc3d26" testId="cd3abb7f-93b7-59d4-1d5a-fe807cd68d98" testName="SpocR.Tests.SpocRVNext.Metadata.ResultSetNamingFallbackTests.UnparsableSql_KeepsFallbackResultSetName" computerName="WOODY" duration="00:00:00.0160690" startTime="2025-10-23T18:07:42.9102006+02:00" endTime="2025-10-23T18:07:42.9259494+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56be4138-10da-4440-8c7b-41eaa6cc3d26" />
    <UnitTestResult executionId="a4cab2ff-29f8-4f1a-a026-8c2812103990" testId="20df6d10-a5c0-3fd5-a363-881eb9af2744" testName="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber" computerName="WOODY" duration="00:00:00.0004372" startTime="2025-10-23T18:07:51.5897686+02:00" endTime="2025-10-23T18:07:51.5900097+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a4cab2ff-29f8-4f1a-a026-8c2812103990">
      <Output>
        <ErrorInfo>
          <Message>Assert.Contains() Failure: Sub-string not found&#xD;
String:    "// &lt;auto-generated/&gt;\r\n// SpocR v4.5 Bridg"···&#xD;
Not found: "public IReadOnlyList&lt;CreateUserWithOutput"···</Message>
          <StackTrace>   at SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber() in c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generation\UnifiedResultTests.cs:line 18&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0291bdd1-6b22-49f4-9310-fb59ef02a535" testId="f2cc810b-d899-d69d-143e-df847a052f84" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;varbinary(max)&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" computerName="WOODY" duration="00:00:00.0000008" startTime="2025-10-23T18:07:43.1151845+02:00" endTime="2025-10-23T18:07:43.1152073+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0291bdd1-6b22-49f4-9310-fb59ef02a535" />
    <UnitTestResult executionId="c95b971b-bdb6-4be3-89c6-367719d6f8fa" testId="2d88026b-f56b-c747-a478-42d19c8ff933" testName="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;money&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" computerName="WOODY" duration="00:00:00.0000007" startTime="2025-10-23T18:07:43.1171896+02:00" endTime="2025-10-23T18:07:43.1172068+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c95b971b-bdb6-4be3-89c6-367719d6f8fa" />
    <UnitTestResult executionId="cbd9e64e-5678-489b-97ec-f240e20cb3bd" testId="399e7843-362c-cc59-026d-0c8a5af954f5" testName="SpocR.Tests.Cli.JsonParserV5InferenceTests.LeftJoin_Second_Table_Should_Force_Nullability" computerName="WOODY" duration="00:00:00.0006215" startTime="2025-10-23T18:08:23.1846315+02:00" endTime="2025-10-23T18:08:23.1851900+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cbd9e64e-5678-489b-97ec-f240e20cb3bd" />
  </Results>
  <TestDefinitions>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.JsonResultSetRowVersionRoundtripTests.RowVersion_Should_Map_To_ByteArray_And_Deserialize_From_Base64" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="80e37b89-41d1-9d31-c1ed-01ae1a9c344f">
      <Execution id="2f7a31af-82fb-4949-aa55-8ff7908bad29" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.JsonResultSetRowVersionRoundtripTests" name="RowVersion_Should_Map_To_ByteArray_And_Deserialize_From_Base64" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Raw_Only_For_Json_Single" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0eaf6ae6-00c1-698a-2e63-817926873ce4">
      <Execution id="9c21c0d3-9c26-477a-810b-524b0487af97" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests" name="Generates_Raw_Only_For_Json_Single" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests.DynamicSql_SpExecutesql_Forces_Generic_Naming" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f6beb158-636b-a0d4-cf9f-493e86cd87c4">
      <Execution id="b07d2ac8-604b-4041-895a-f1e015e21ef6" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests" name="DynamicSql_SpExecutesql_Forces_Generic_Naming" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.1.0&quot;, right: &quot;1.0.5&quot;, expectedSign: 1)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="8a0d999a-0aac-c38a-7d4b-1e873169211e">
      <Execution id="d40a8d93-fe1d-4e1c-ad68-8100614dc10e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="Compare_Should_Work_On_First_3_Parts" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetime2&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="cc327d91-e1e0-e9f9-95c8-ee07000743e1">
      <Execution id="83621eed-7aef-4ad9-bf80-a791c624e070" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureTemplateExtensionsTests.UnifiedProcedureTemplate_Has_Wrapper_And_Extension_With_New_Naming" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9e8e7463-a219-bbba-6ec2-ed03f1309fe7">
      <Execution id="338575cf-eb88-4b57-872f-bcdfa00fa23d" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureTemplateExtensionsTests" name="UnifiedProcedureTemplate_Has_Wrapper_And_Extension_With_New_Naming" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests.MultiResult_Suffixes_Applied_For_Duplicate_Base_Table" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="657921b0-9e76-65c7-527d-e042084b0a72">
      <Execution id="b5db266e-8a68-42a7-ae9c-54da642c6c72" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests" name="MultiResult_Suffixes_Applied_For_Duplicate_Base_Table" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Only_Raw_For_NonJson" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4b10f895-d52f-1024-073d-9c5db214bf2d">
      <Execution id="8037cefa-e73e-42f9-b1ac-8e43f61cc171" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests" name="Generates_Only_Raw_For_NonJson" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.JsonTypeMappingBasicTests.OptionalRef_Should_Be_Nullable_Int" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b3dc3968-996d-860e-7920-c40721303f6f">
      <Execution id="d98ec76c-8a38-44ca-8617-146cae7ae71c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.JsonTypeMappingBasicTests" name="OptionalRef_Should_Be_Nullable_Int" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests.Generates_Raw_Only_For_Json_Array" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c96c8b6c-6f06-a3fc-01cf-95324dc73de8">
      <Execution id="d8f1cee6-3502-416e-a36d-83a76063144e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorJsonTests" name="Generates_Raw_Only_For_Json_Array" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests.Generates_Xml_Doc_For_Empty_Json_Model" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2fb4d325-f06a-b874-ed38-9180caa3966c">
      <Execution id="06081c98-1082-4aa3-b2ba-310816abce7b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests" name="Generates_Xml_Doc_For_Empty_Json_Model" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.SingleQuotedDottedAlias_Should_Bind_SourceColumn" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6ae69cc6-71db-bbd7-37e0-d4b9e0090538">
      <Execution id="3fe1c0d5-b560-4e7e-8b48-3746e6565667" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserDotAliasBindingTests" name="SingleQuotedDottedAlias_Should_Bind_SourceColumn" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Should_Substitute_TopLevel_Properties" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0c0df242-24d2-4a48-dc00-f38e36d13a48">
      <Execution id="d338a1de-2461-4c25-b828-389174242234" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests" name="Render_Should_Substitute_TopLevel_Properties" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: &quot;&quot;, expected: &quot;&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a2bbdb73-4296-02f1-6508-f29c9db8ff8a">
      <Execution id="4293d58e-9054-458b-85e3-eb0397e70b03" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToUpper_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Verify_Should_Diff_After_Modification_Relaxed" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e3c5ef77-90ab-2d1d-f3fb-122ef055422f">
      <Execution id="13149483-ac2a-4ea8-9813-13656762113d" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests" name="Verify_Should_Diff_After_Modification_Relaxed" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureJsonAstOnlyTests.Legacy_Single_Column_Sentinel_Upgraded_With_Flag" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4c28ba82-bd75-5596-d8dc-73c43cff1045">
      <Execution id="d225c4e8-75cc-4874-9a46-84bb3aeab5d1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureJsonAstOnlyTests" name="Legacy_Single_Column_Sentinel_Upgraded_With_Flag" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_StaticSql_ReturnsFirstBaseTable" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2f809b1a-f266-2517-29e3-c5abc8a1939e">
      <Execution id="c48945d6-a270-4173-a87c-a608c8dad8d3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ResultSetNameResolverDynamicSqlTests" name="TryResolve_StaticSql_ReturnsFirstBaseTable" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests.DbContextGenerator_Generates_In_Dual_Mode" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3cdcd402-840c-6c6d-c6d7-c68ed6e2c1e9">
      <Execution id="b6ad91d0-b0d1-44e9-8592-2b05fa1ca4ef" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests" name="DbContextGenerator_Generates_In_Dual_Mode" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some_value&quot;, expected: &quot;Some_value&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4bfe9218-fd5b-2175-67f4-aefb242cb1e5">
      <Execution id="7c822ee9-d0f8-40ce-a298-0ce368266e4c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests.MixedProcedure_Should_Append_Target_ResultSets_After_Own" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="860d8f71-1ac3-4b2f-ffb5-d78f329d024d">
      <Execution id="332535e1-e635-4c8d-9fe2-aa05e2af51ad" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests" name="MixedProcedure_Should_Append_Target_ResultSets_After_Own" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserSelectStarTests.ForJson_WithExplicitAndStar_SetsFlagAndKeepsExplicitColumn" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="972e4b70-45c8-af01-3e2d-c4ec707fc4bc">
      <Execution id="b854456f-d204-4984-b190-4c0870c44326" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserSelectStarTests" name="ForJson_WithExplicitAndStar_SetsFlagAndKeepsExplicitColumn" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureAstTests.NestedJson_Subquery_Should_Flag_IsNestedJson_On_Column" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9b64a487-6ea9-9d4a-c402-f30f35c197b3">
      <Execution id="ebe745ad-4d8d-4b3c-bc55-28efb50da323" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureAstTests" name="NestedJson_Subquery_Should_Flag_IsNestedJson_On_Column" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureJsonAstOnlyTests.Legacy_Single_Column_Sentinel_Not_Upgraded_By_Default" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f332cc25-7f1b-aaa8-c1a8-ec8029800fd8">
      <Execution id="d8ef2a1a-0364-475a-87e0-5ef08eebc689" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureJsonAstOnlyTests" name="Legacy_Single_Column_Sentinel_Not_Upgraded_By_Default" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Infrastructure.ExitCodesTests.ExitCodeValues_ShouldMatchDocumentation" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3770c957-5a49-2af5-37b4-087b1bc86866">
      <Execution id="ca7ea998-1671-47de-abfa-fa01cadddd43" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Infrastructure.ExitCodesTests" name="ExitCodeValues_ShouldMatchDocumentation" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.LegacyMode_IgnoresSpocrJsonConnectionString_ForGeneratorProperties" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="7a714aed-d456-55fd-bd67-60e0f0d9e9b1">
      <Execution id="881be78e-724f-4050-8d32-e0d29087e2c6" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="LegacyMode_IgnoresSpocrJsonConnectionString_ForGeneratorProperties" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_OnException_FailsAndSetsError" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a353a595-4fa8-94a9-5365-731de7ea926e">
      <Execution id="d6d96641-9da2-4014-ae16-b393ca36a3d3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests" name="ExecuteAsync_OnException_FailsAndSetsError" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.StatusFindAsJsonAstTests.StatusFindAsJson_FunctionSelect_ForJsonColumnsExtracted" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="8391dc21-5f23-6ab1-605d-c765aab8f25f">
      <Execution id="b1e95ae8-5124-4787-9996-547dc4981a5c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.StatusFindAsJsonAstTests" name="StatusFindAsJson_FunctionSelect_ForJsonColumnsExtracted" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Diagnostics.JsonResultSetAuditTests.Audit_Flags_StringPlaceholders_ForNumeric" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e903e852-c79e-a214-ffe0-1ccfc40d81ba">
      <Execution id="25692ed1-c0da-4fa0-9128-d27a8e169e01" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Diagnostics.JsonResultSetAuditTests" name="Audit_Flags_StringPlaceholders_ForNumeric" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;text&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9e4b9ec7-d511-587a-1ff1-dbe8a5a48da1">
      <Execution id="40471fe1-40d3-4571-ae8f-52c187cc132c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.ExperimentalCliTests.GenerateDemo_Runs_When_Experimental_Flag_On" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="65073c41-c98a-344b-72c5-75328c7cf402">
      <Execution id="30f786e6-0e3c-4a1b-a5c1-bd3b232e06bf" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.ExperimentalCliTests" name="GenerateDemo_Runs_When_Experimental_Flag_On" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Versioning.BridgePolicyTests.DirectMajor_Blocked_Without_Override" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="1d2f585a-a6ba-383d-5178-822ef8f6a99c">
      <Execution id="1a11f9e3-22b0-41d0-a871-a613603394b5" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Versioning.BridgePolicyTests" name="DirectMajor_Blocked_Without_Override" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests.NonSchemaQualified_RecordAsJson_Should_Not_Set_SchemaName" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c2e83a33-2588-218c-5f35-f8d49dbdca6a">
      <Execution id="e088d041-309f-44ac-8317-de068d947774" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests" name="NonSchemaQualified_RecordAsJson_Should_Not_Set_SchemaName" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.Equals_Should_Ignore_Revision_Component" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="83b97a31-3ea9-fb05-5592-715f3964fd2b">
      <Execution id="5b9a58b3-8175-480b-9c91-9bf4ba35a59c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="Equals_Should_Ignore_Revision_Component" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.Precedence_CLI_over_ENV_over_DotEnv" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="52775da7-8070-eb26-b5b8-0b197d2d843d">
      <Execution id="a5e2ff5e-8fc6-4e1a-a80c-86531ba9dda0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="Precedence_CLI_over_ENV_over_DotEnv" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_TryLoad_Is_CaseInsensitive" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b3ca4710-9b87-bc92-04a1-398d85c1e339">
      <Execution id="b5db7172-5745-4979-9969-5ec8778318fd" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests" name="Loader_TryLoad_Is_CaseInsensitive" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_TryLoad_Returns_Content_When_Found" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0375fd74-9a8b-f2fe-074c-ebdb26cbec16">
      <Execution id="6a4df312-19df-4524-ba0d-7187c4844c92" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests" name="Loader_TryLoad_Returns_Content_When_Found" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.Rebuild_Twice_Produces_Identical_Golden_Hashes" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="24151ffc-5de1-e54a-43da-706b2955e484">
      <Execution id="80e33577-9596-4f1b-9776-8e683aae9db7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests" name="Rebuild_Twice_Produces_Identical_Golden_Hashes" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserV5InferenceTests.LeftJoin_Second_Table_Should_Force_Nullability" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="399e7843-362c-cc59-026d-0c8a5af954f5">
      <Execution id="cbd9e64e-5678-489b-97ec-f240e20cb3bd" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserV5InferenceTests" name="LeftJoin_Second_Table_Should_Force_Nullability" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.NamespaceResolverTests.Resolve_IgnoresCsproj_WhenExplicitNamespaceProvided" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="76430dec-c954-1d80-8f95-4eaf222aa34a">
      <Execution id="e9bf877f-5ba8-4969-96bd-e20f3e29a7e7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.NamespaceResolverTests" name="Resolve_IgnoresCsproj_WhenExplicitNamespaceProvided" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Null_Model_Returns_Template" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4a1176f9-6356-ff8f-9e36-a4eb0fb78171">
      <Execution id="af26f003-0bf6-4efc-8a74-30468404c144" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests" name="Render_Null_Model_Returns_Template" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.HeuristicAndCacheTests.Caching_Skips_Unchanged_Definition_Load" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="8aa13eea-74a9-2da4-799a-2901dfcced67">
      <Execution id="e7109ffe-0590-4c80-af73-c27015969297" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.HeuristicAndCacheTests" name="Caching_Skips_Unchanged_Definition_Load" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureAstTests.ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3474c809-aa61-c509-e2af-28fe246f1afb">
      <Execution id="4d44a044-ebc3-4269-bbeb-a31164b0e046" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureAstTests" name="ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="20df6d10-a5c0-3fd5-a363-881eb9af2744">
      <Execution id="a4cab2ff-29f8-4f1a-a026-8c2812103990" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests" name="CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;nchar(5)&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="be498831-d023-dcad-bc2f-97e6ef1600ea">
      <Execution id="f7fa05fa-ca87-47ed-91d1-5b16dea998c0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.0.1&quot;, right: &quot;1.0.0&quot;, expectedSign: 1)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="bacb3668-e872-60bf-f20c-f38299f4a2c1">
      <Execution id="10225c4e-05c0-4c30-83be-5f4ed2ba4b72" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="Compare_Should_Work_On_First_3_Parts" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0f0e595c-aad5-2fb5-6227-12875099a268">
      <Execution id="695a41fc-c5a3-463b-b7eb-b1ff2a8cc561" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests" name="OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;float&quot;, expected: &quot;System.Data.DbType.Double&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4f80185b-9a1d-86e4-5cad-bcb58e578d21">
      <Execution id="a61c9c4b-78b1-45f4-b180-273d7979e382" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="506c0bb1-02f1-2e4f-0f6b-b767f3bc122b">
      <Execution id="f54ff4c6-d81c-4ae6-9962-a483c58f1e86" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests" name="GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.MinMaxTypingTests.MinMax_Literal_Typing_Should_Infer_Int_And_Decimal" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="317808e2-e09e-ff12-92b6-fe2348538b70">
      <Execution id="627819ad-24d3-4174-9a56-6095fab3437f" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.MinMaxTypingTests" name="MinMax_Literal_Typing_Should_Infer_Int_And_Decimal" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.RoleDeprecationTests.Save_Removes_Role_When_Default" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b497dfb4-8f8a-3574-c4cb-5508852ffc12">
      <Execution id="76e49357-adb0-412b-bef9-279740353824" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.RoleDeprecationTests" name="Save_Removes_Role_When_Default" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;smalldatetime&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="83188dd6-8f54-e80d-3a24-e4070295391b">
      <Execution id="d516d9e5-9a08-488a-bc7c-c9c4bcd9182b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.DuplicateBaseTable_SubsequentGetsNumericSuffix" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0c8893c4-1fbc-7190-5351-c18bf27d9b7e">
      <Execution id="4e6992fa-d890-400e-94a6-136d520df9ef" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests" name="DuplicateBaseTable_SubsequentGetsNumericSuffix" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.IsGreaterThan_Should_Return_True_When_Left_Is_Newer" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b0c7c10e-5dc7-f793-2f0a-dd0a9c6f5a2c">
      <Execution id="4e801b9c-ea2e-4a74-98d5-18129b6814ae" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="IsGreaterThan_Should_Return_True_When_Left_Is_Newer" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Should_Substitute_Nested_Properties" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="01feda20-8602-30ba-e317-89ca2962c0d5">
      <Execution id="e25db951-b678-4c5b-879f-7638f1060c6d" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests" name="Render_Should_Substitute_Nested_Properties" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ColumnNormalizationTests.UserDefinedTypeFiles_Should_Not_Have_Empty_BaseSqlTypeName" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="85aeed33-4951-9f79-1a3c-1197a163e4d8">
      <Execution id="6d94b498-2127-4ad1-85b2-434fef7e64d1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ColumnNormalizationTests" name="UserDefinedTypeFiles_Should_Not_Have_Empty_BaseSqlTypeName" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.Invalid_Mode_Throws" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="d567d2be-f35e-63a0-3d7c-f8c96bc88c81">
      <Execution id="04a3432e-54ee-4f33-909f-294091c9fae8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="Invalid_Mode_Throws" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.OutputDir_DefaultsToSpocR_WhenMissing" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="ab785694-2231-7358-863f-c34c2f0bb261">
      <Execution id="eb1c9a1e-b6ca-41ff-9848-5698207779e3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="OutputDir_DefaultsToSpocR_WhenMissing" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;numeric(10,0)&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="083cb890-ee03-5962-0cd5-9e8d1873b3d7">
      <Execution id="5a9bd6ed-3fe5-44dd-8d8d-70af1d72884c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.ExecAppendNormalizationTests.ProcedureWithOwnJsonAndExec_AppendsExecutedProcResultSets" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9012aed6-d062-f70f-8c52-c6eb9b56b5ef">
      <Execution id="9c918f2b-a4a8-4d5e-8028-c24b7c003126" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.ExecAppendNormalizationTests" name="ProcedureWithOwnJsonAndExec_AppendsExecutedProcResultSets" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests.PureWrapper_Should_Forward_All_Target_ResultSets" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="443b1fbf-3a37-93c0-372d-99140bd34240">
      <Execution id="805c64c4-380e-4942-827b-bd0109f38654" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingTests" name="PureWrapper_Should_Forward_All_Target_ResultSets" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Versioning.BridgePolicyTests.DirectMajor_Allowed_With_Override" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a44ed467-7c8e-f860-b089-c8dec15b1778">
      <Execution id="376d0026-126a-4c2b-8b97-12241314cdc0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Versioning.BridgePolicyTests" name="DirectMajor_Allowed_With_Override" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.TestCommandSummaryTests.CiValidate_Should_Write_TestSummaryJson" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="91d4f3a6-3e74-068e-1531-235897e85a9e">
      <Execution id="17cf6bd0-ffa2-4a12-8b76-ac228c5b1bec" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.TestCommandSummaryTests" name="CiValidate_Should_Write_TestSummaryJson" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests.ReturnsEmpty_WhenNoSnapshot" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="ca137924-1ddb-c9c8-818d-6c9a27bff3a1">
      <Execution id="8f7afdb6-3f4d-4a9a-abfb-ae12d88ef4ce" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests" name="ReturnsEmpty_WhenNoSnapshot" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.RoleDeprecationTests.Keep_Role_When_NonDefault" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="67d0efa7-b4bf-e345-0157-58cc9bbb8c49">
      <Execution id="177a52e6-23e5-43e0-b46a-f9b22eba13cd" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.RoleDeprecationTests" name="Keep_Role_When_NonDefault" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SimpleTest.SimpleAssertion_ShouldWork" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9d78bb61-69f2-8609-4581-bb08b9a82eae">
      <Execution id="74c56a56-1365-42e3-9780-7f63b1a07e06" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SimpleTest" name="SimpleAssertion_ShouldWork" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Fallback_To_String_For_Unknown" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2d3c9ad9-78ad-606e-8e0f-8d0243af77e9">
      <Execution id="64a40535-fd7f-43fa-b4d3-7cee6a069e65" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Fallback_To_String_For_Unknown" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.StoredProcedureListTests.List_Returns_Procedures_As_Json_Array" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="7e71660c-171e-6dc0-a3d9-a4801da95574">
      <Execution id="e18dbd67-7b16-4725-887a-dda3194e9342" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.StoredProcedureListTests" name="List_Returns_Procedures_As_Json_Array" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.AggregateTypingExtendedTests.Aggregates_Should_Have_Inferred_Types" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c664f295-1a5b-a54a-a146-91c03c83eca0">
      <Execution id="de0dbdee-2b32-402e-ac81-032f384e248b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.AggregateTypingExtendedTests" name="Aggregates_Should_Have_Inferred_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_Should_Read_All_Spt_Files" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2fe7ce78-23fd-f783-ef06-b74a29c9d28e">
      <Execution id="d5b62803-4b4c-4545-9fd7-2f8d3f473076" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests" name="Loader_Should_Read_All_Spt_Files" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingDiagnostics.Dump_Mixed_And_Wrapper_Generated_Code" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2fca1487-0a5d-7401-1ab7-2def05861f0d">
      <Execution id="57d902c7-219a-41f5-aa28-a0003d1d2395" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.CrossSchemaExecForwardingDiagnostics" name="Dump_Mixed_And_Wrapper_Generated_Code" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.JsonQueryAlias_Should_Not_Have_SourceBinding" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c57cd40c-828a-24c1-0b7d-2aabad50d7e0">
      <Execution id="a10e63a0-1f9f-47c1-a946-50511d49977b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserDotAliasBindingTests" name="JsonQueryAlias_Should_Not_Have_SourceBinding" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: &quot;&quot;, expected: &quot;&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="d9cf9315-c5e1-56b0-3017-b933246b67f5">
      <Execution id="c85d3a76-3546-4270-8177-40af3a5de168" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToLower_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests.Interceptor_Captures_Error_On_Failure" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="cf63d430-d354-c4e6-5daa-9f5dfbf3671b">
      <Execution id="2c32ec07-5b0b-42bd-be68-bc99522552fa" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests" name="Interceptor_Captures_Error_On_Failure" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureJsonAstOnlyTests.CommentContaining_ForJson_Does_Not_Create_Json_ResultSet" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="5a9f0f15-1a7e-4d62-e0d0-714dcfb24817">
      <Execution id="eed51627-c1f1-497d-b59b-546f3f3ffd50" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureJsonAstOnlyTests" name="CommentContaining_ForJson_Does_Not_Create_Json_ResultSet" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;smallint&quot;, expected: &quot;System.Data.DbType.Int16&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="05f124a9-2672-d95a-714d-f62d89ff295b">
      <Execution id="315dac61-74ca-42ce-9e59-6bd635a735e1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Versioning.VersionStabilityTests.Build_Twice_ShouldProduceSameAssemblyVersion_WhenNoTagChanges" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b41531c6-90a7-6477-2545-450ac00f98ca">
      <Execution id="7c12b47b-b151-486b-ba2b-5524e0c29ef5" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Versioning.VersionStabilityTests" name="Build_Twice_ShouldProduceSameAssemblyVersion_WhenNoTagChanges" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some.value&quot;, expected: &quot;SomeValue&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="92a7fcb9-fd96-3c60-dd27-7ae8f78b2955">
      <Execution id="042da50a-a5d7-4dda-b29c-137dfe510015" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;1.0.0&quot;, right: &quot;1.0.0&quot;, expectedSign: 0)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f03e3ae9-c73e-8bc9-d2c8-98a5d6052f22">
      <Execution id="a0dfc9e6-bcf5-4728-8f4c-7abbd9e16048" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="Compare_Should_Work_On_First_3_Parts" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.GenerationDeterminismTests.RepeatedRuns_AreDeterministic_ForProceduresAndInputs" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="58d3a6f5-da27-4dc1-2c46-076a7427d9c9">
      <Execution id="ca413f83-5642-48e3-8743-e5d834f6bf61" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.GenerationDeterminismTests" name="RepeatedRuns_AreDeterministic_ForProceduresAndInputs" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.NamespaceResolverTests.Resolve_ReturnsExplicitNamespace" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="fcb7e71b-5a80-1271-161f-5d30d657658f">
      <Execution id="8c6cfa89-8dac-476e-bbd2-e22c2004f626" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.NamespaceResolverTests" name="Resolve_ReturnsExplicitNamespace" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.GeneratesFiles_WithStubProvider" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e0cc3e73-e902-f987-da02-02f56a2be4a8">
      <Execution id="64c64727-5230-4428-9433-c321936a2c2c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests" name="GeneratesFiles_WithStubProvider" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests.GoldenSnapshot_DoubleRun_IsStable" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0683c4b1-c463-1781-e089-d2667a3d3163">
      <Execution id="f94a74f1-6417-4d40-96da-47270020876b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests" name="GoldenSnapshot_DoubleRun_IsStable" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Infrastructure.ExitCodesTests.ExitCodes_ShouldBeUnique" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="76928d9a-8d02-6f2f-edc6-a9e3bfc149cf">
      <Execution id="3ae5b4d1-a3cf-4f66-9b70-38b414f1cf2e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Infrastructure.ExitCodesTests" name="ExitCodes_ShouldBeUnique" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ColumnNormalizationTests.BaseSqlTypeName_Should_Differ_From_SqlTypeName_When_Present" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="45c262da-a20c-e20f-1b3c-5bd2ab24299a">
      <Execution id="b55868c7-7541-46ae-bef9-7550ab3879cc" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ColumnNormalizationTests" name="BaseSqlTypeName_Should_Differ_From_SqlTypeName_When_Present" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;date&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3e220517-5b74-1ea3-1e82-9d770d270225">
      <Execution id="ae6bb730-7319-420d-9f6b-8cc9d3247c6c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_UsesEnvConnectionString_IfPresent" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="d0035af6-ff30-774c-5ae8-8558b88a4f35">
      <Execution id="7f6916ce-6740-4dd2-8b87-5d803418239f" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="DualMode_UsesEnvConnectionString_IfPresent" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserSelectStarTests.ForJson_WithSelectStar_SetsHasSelectStarTrueAndNoColumns" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="06a02a93-20c5-fddc-e17e-66032bfc8fb7">
      <Execution id="72bc3a2b-070a-4d73-a11e-7a46ad7c1f26" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserSelectStarTests" name="ForJson_WithSelectStar_SetsHasSelectStarTrueAndNoColumns" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;time&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="077dd998-9e96-e06e-8c06-da4296faf010">
      <Execution id="57d9b641-544d-46e4-b3b1-be005a2af503" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.UnparsableSql_FallsBack_GenericNamesRemain" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="8cdb6bae-2565-9285-033a-8823738e4b13">
      <Execution id="b8282c4d-3239-4533-8b4f-b08d27c73f70" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests" name="UnparsableSql_FallsBack_GenericNamesRemain" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.JsonTypeMappingBasicTests.RowVersion_Should_Map_To_ByteArray" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a613410a-d8da-581f-4276-abd2e99ca94d">
      <Execution id="26fccd42-4640-46a8-81db-0ea9e03fe8dc" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.JsonTypeMappingBasicTests" name="RowVersion_Should_Map_To_ByteArray" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;binary(50)&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="62eeeb7c-0a57-eb77-1ddc-9375639867e3">
      <Execution id="789a9bf4-51b1-48b3-b304-4ede0d9d5ade" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.Compare_Should_Work_On_First_3_Parts(left: &quot;2.0.0&quot;, right: &quot;2.1.0&quot;, expectedSign: -1)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="69092e1a-47bd-364b-94b1-62e5fce0fb2e">
      <Execution id="a32020b1-9095-4409-a285-2269dd1b028c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="Compare_Should_Work_On_First_3_Parts" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureAstTests.Ambiguous_SinglePart_Column_Should_Set_IsAmbiguous" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0a5b3e91-25ed-4183-596b-7602ad35f5fb">
      <Execution id="27e80c81-18c3-46fc-8e92-2179d30a8af8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureAstTests" name="Ambiguous_SinglePart_Column_Should_Set_IsAmbiguous" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureJsonAstOnlyTests.ForJsonPath_With_WithoutArrayWrapper_Detected_As_Single_Object" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="463521a5-20ef-091c-7303-266b24a7bb63">
      <Execution id="e582fbe9-ffec-4c16-ae8a-b2284c5b6699" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureJsonAstOnlyTests" name="ForJsonPath_With_WithoutArrayWrapper_Detected_As_Single_Object" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.VersionExtensionsTests.IsLessThan_Should_Return_True_When_Left_Is_Older" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="bbe016f2-c985-a967-63a3-28c53ae8982f">
      <Execution id="b6c53a95-c01c-4eb0-a10f-09cdb04dbee7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.VersionExtensionsTests" name="IsLessThan_Should_Return_True_When_Left_Is_Older" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;image&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9b1b615f-4c6e-d64b-c943-4bab8f2711dd">
      <Execution id="84dba5be-23c9-46af-8766-0e8ec2b33f5c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_WithoutEnvFile_Throws" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="72357617-4107-7fe2-c7b5-2f9787d29913">
      <Execution id="984371c4-6d9c-48a3-a44e-b3778c9087b5" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="DualMode_WithoutEnvFile_Throws" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ColumnNormalizationTests.IdentityFlag_Should_Exist_Only_When_True" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e65bc9e8-01dc-6764-6fb4-1db2483f7a6a">
      <Execution id="55e6a365-496a-4b77-aad6-699e93765d5d" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ColumnNormalizationTests" name="IdentityFlag_Should_Exist_Only_When_True" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;uniqueidentifier&quot;, expected: &quot;System.Data.DbType.Guid&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0d2bfa2d-9728-96b2-5669-1ea18b160d93">
      <Execution id="47c20654-4ff8-4af6-81e9-f898904e44d1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Write_And_Verify_Should_Match" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="89d6a87f-0476-7eb2-bb92-2640d7503f49">
      <Execution id="c27d59db-8b16-4d7f-b6cf-8211d7f7da68" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests" name="Write_And_Verify_Should_Match" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests.DynamicSql_ExecVariable_Forces_Generic_Naming_MultipleSets" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="dba03faa-b621-8cf4-5567-8b61fe43eecf">
      <Execution id="8cb08421-b9e9-4bee-969a-5300eee94284" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.ResultSetNameResolverDynamicSqlTests" name="DynamicSql_ExecVariable_Forces_Generic_Naming_MultipleSets" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;varchar(10)&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e5372233-516a-b67a-d9b1-8445078b12d0">
      <Execution id="f626139e-1258-4de4-a1eb-1e33e7f31f95" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests.IdentityRecordAsJson_FunctionCall_Should_Set_IsRecordAsJson_Flag" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="01c3fc25-0ff4-ce2f-2f43-51b9e87b4ea7">
      <Execution id="4a193571-8852-496e-9793-1eb15ced4bde" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserRecordAsJsonDetectionTests" name="IdentityRecordAsJson_FunctionCall_Should_Set_IsRecordAsJson_Flag" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SchemaSnapshotStructureTests.TableColumns_Prune_FalseAndZeroValues" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0eb28a37-f0ee-7fcc-66eb-97c0fd3d0c49">
      <Execution id="7e3617ec-51a9-41c5-8958-9d4e3de573a2" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SchemaSnapshotStructureTests" name="TableColumns_Prune_FalseAndZeroValues" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: &quot;Hello&quot;, expected: &quot;hello&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0ce4aedd-c57b-4e35-70bf-ca3db5c25084">
      <Execution id="6f23eab4-642e-46e3-b3e7-6e26c59c9680" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToLower_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.ComplexJoinAndApply_Should_Bind_DottedAliases" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c13f10f1-a004-afd2-3408-a6c75d1b74f3">
      <Execution id="e8d7379a-254c-4b2a-a2ba-8a03f6dd5a86" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserDotAliasBindingTests" name="ComplexJoinAndApply_Should_Bind_DottedAliases" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;decimal(18,2)&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="d4b1079d-849e-d813-909e-4829c02daa34">
      <Execution id="41b4c62a-cfa4-45fb-b755-a7e3c69d02c3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ResultSetNamingConflictTests.DuplicateSuggestedNames_AreAssignedIncrementalSuffixes" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a5ca2523-b4f6-ee0e-288b-ee9e54487a97">
      <Execution id="f3b73b96-573f-4f0b-9836-6cd060f1b43e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ResultSetNamingConflictTests" name="DuplicateSuggestedNames_AreAssignedIncrementalSuffixes" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ColumnNormalizationTests.MaxLength_Prunes_Zero" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e7288453-574f-09fe-6b45-2f5d799357d0">
      <Execution id="38d075d0-c334-48c8-961e-b0e4c4de5bfa" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ColumnNormalizationTests" name="MaxLength_Prunes_Zero" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;tinyint&quot;, expected: &quot;System.Data.DbType.Byte&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="1c28a542-9d97-af13-23b5-01384ece44f4">
      <Execution id="3766a90e-c364-4727-9a38-c083e6b53a6e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests.Consolidated_Procedure_Files_DoubleRun_Deterministic" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="aea29fa1-b8d4-d6ff-65a6-6c874c9aa64f">
      <Execution id="79bb7ecb-dc68-4da1-9b7b-d5b1239051bb" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests" name="Consolidated_Procedure_Files_DoubleRun_Deterministic" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.ResultSetNamingFallbackTests.UnparsableSql_KeepsFallbackResultSetName" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="cd3abb7f-93b7-59d4-1d5a-fe807cd68d98">
      <Execution id="56be4138-10da-4440-8c7b-41eaa6cc3d26" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.ResultSetNamingFallbackTests" name="UnparsableSql_KeepsFallbackResultSetName" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.JournalMetricsTypingTests.Aggregates_And_Computed_Addition_Should_Set_Flags" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="c2657d5f-1ee3-cbda-b983-4e693e7a760a">
      <Execution id="7e4f9da0-4da8-4d68-808b-97801eae6243" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.JournalMetricsTypingTests" name="Aggregates_And_Computed_Addition_Should_Set_Flags" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests.ReturnsJsonArray_False_Should_Use_Single_Object_Path" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4b90f7d9-4f50-df6f-1167-40d44f6fa4db">
      <Execution id="cb097fa3-3771-4e00-b4c5-ba36e97908ce" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests" name="ReturnsJsonArray_False_Should_Use_Single_Object_Path" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: null, expected: null)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="14217d24-bad4-b961-96a3-fc1d927b4ca8">
      <Execution id="ac1c9ecc-fccb-4608-a3e6-1962fffe3ad3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToUpper_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.SkipUpdateTests.EnvVar_Skips_Update_Check" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="fc622026-4829-25ac-689b-8d48120a17f3">
      <Execution id="2aabe591-c4b3-4d4d-8d33-dd6e28240bd9" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.SkipUpdateTests" name="EnvVar_Skips_Update_Check" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;bit&quot;, expected: &quot;System.Data.DbType.Boolean&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f47d4c70-e88f-c8dc-b372-9a858bbb5fae">
      <Execution id="569f001e-1ca2-47c0-a625-dc84e4af196c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests.Renames_Generic_ResultSet_Name_From_Table_In_Sql" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="94d5c953-51e1-24e8-fe8a-7d2a546f7be5">
      <Execution id="c3c5246c-86af-4ed4-887d-c296ac831407" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests" name="Renames_Generic_ResultSet_Name_From_Table_In_Sql" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;real&quot;, expected: &quot;System.Data.DbType.Single&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="de08d421-69df-8e08-2c8d-a8eb920803d3">
      <Execution id="9ecf9366-be7b-47d8-8280-c43bf4bd86b0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.DirectoryHasherTests.HashDirectory_Twice_YieldsSameAggregate" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f2e5a69b-95b0-11b7-748b-59a021688a62">
      <Execution id="5f005d32-add1-4082-8c25-ca9bf5626a39" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.DirectoryHasherTests" name="HashDirectory_Twice_YieldsSameAggregate" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests.Optional_RealSampleSnapshot_IfPresent_IsDeterministic" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6667483d-cada-4113-8c04-7f7cc53957b4">
      <Execution id="77ba52d5-e309-4f05-b36a-fc2a673eab22" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.GoldenSnapshotTests" name="Optional_RealSampleSnapshot_IfPresent_IsDeterministic" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;nvarchar(50)&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="480b297a-def6-db2f-2744-da909d3cb419">
      <Execution id="5253db15-242c-4826-b797-bb102151a445" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicSpExec AS BEGIN DECLAR&quot;···)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="003aa20a-732b-8dd2-99e9-649bbbc15197">
      <Execution id="71c3345a-29dd-42df-9dee-b5b6e27186cc" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ResultSetNameResolverDynamicSqlTests" name="TryResolve_DynamicSqlPatterns_ReturnsNull" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_CapturesOutputParameters" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6775043c-8cd9-ca63-0cbf-d18ed15fc231">
      <Execution id="d8ce0940-3980-4859-8fcc-bd869b55db85" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests" name="ExecuteAsync_CapturesOutputParameters" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests.DbContextGenerator_Skips_In_Legacy_Mode" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="bf4e52d2-269c-228d-8e0d-bd8d3b3f5622">
      <Execution id="8c32e3b8-b663-44c3-9302-a470d95ee016" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorTests" name="DbContextGenerator_Skips_In_Legacy_Mode" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToUpper_Works(input: &quot;hello&quot;, expected: &quot;Hello&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="18604c25-f454-22fb-3c22-192b085f8fa2">
      <Execution id="60dd8782-5f43-428d-bf51-45efda4713f7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToUpper_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.BuildSchemasFilteringTests.Allows_Only_Listed_Schema_Procedures" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="5fdacca5-99f4-558c-74bd-f62a73208905">
      <Execution id="0f07f659-fa6f-4280-bc72-bf07373c7226" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.BuildSchemasFilteringTests" name="Allows_Only_Listed_Schema_Procedures" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests.Consolidated_Procedure_File_Does_Not_Duplicate_InputOutput_Records" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4cb73cdd-aa3c-91d7-d5a8-46b312b364aa">
      <Execution id="270c5f09-df0a-4f49-a6b9-35a18bfd34ed" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generation.ConsolidatedProceduresDeterministicTests" name="Consolidated_Procedure_File_Does_Not_Duplicate_InputOutput_Records" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some value&quot;, expected: &quot;SomeValue&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3397ddfa-adaf-0155-6729-62e2656d6ea7">
      <Execution id="da9011fa-f469-45b5-ae2b-31e173dcfd0e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.JsonResultSetBoolDateTimeRoundtripTests.GeneratedJsonResultSet_Should_Contain_StrongTypes_And_No_LenientStringConverter" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3032ffa2-c459-521f-bcf6-9ba5ade98caa">
      <Execution id="7afc0c55-a221-4fdd-8f2e-61709ab0014a" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.JsonResultSetBoolDateTimeRoundtripTests" name="GeneratedJsonResultSet_Should_Contain_StrongTypes_And_No_LenientStringConverter" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;bigint&quot;, expected: &quot;System.Data.DbType.Int64&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e92b4fad-f129-dc66-08eb-fa8cc18944fd">
      <Execution id="0fd47487-0f07-498e-817a-92a61fd24ddb" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicWithExecParen AS BEGIN&quot;···)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="035b84f3-3f34-beec-d335-657098393984">
      <Execution id="d9ccd384-af96-49bb-9efb-ccc152c26d2e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ResultSetNameResolverDynamicSqlTests" name="TryResolve_DynamicSqlPatterns_ReturnsNull" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Missing_Placeholder_Yields_Empty" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6a56a260-1ef8-d2bf-67ad-5f7953ba123e">
      <Execution id="fe74923d-4a0d-4866-b548-33eb608c52ac" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests" name="Render_Missing_Placeholder_Yields_Empty" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.ExtensionMethodReflectionTests.UserListAsync_ExtensionMethod_Present_And_ReturnsAggregateType" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9f09a054-e5b3-8418-76f1-e5e1eb95c936">
      <Execution id="48773f8c-d042-4f50-abc2-f0d1352f24eb" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.ExtensionMethodReflectionTests" name="UserListAsync_ExtensionMethod_Present_And_ReturnsAggregateType" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests.Snapshot_Raw_And_Deserialize_Pattern" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4db3a0a8-ece1-dd11-e239-b64cdfcc07eb">
      <Execution id="f78bbab1-3550-4135-b18a-fdade52c9110" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests" name="Snapshot_Raw_And_Deserialize_Pattern" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Load_Throws_WhenNamespaceInvalid" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="eccb3c19-90d5-df28-fec2-559b439c390a">
      <Execution id="ad25e1ae-e1f6-4872-9ae4-e6593bcfd3b8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests" name="Load_Throws_WhenNamespaceInvalid" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.StoredProcedureListTests.Schema_Not_Found_Returns_Empty_Array" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f4a765a6-c9c1-87ed-d242-099e8b68ea36">
      <Execution id="ddbd3236-7c28-4d42-99c9-eecf84a905c0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.StoredProcedureListTests" name="Schema_Not_Found_Returns_Empty_Array" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;char(5)&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="fa663b88-06f2-29a7-2d32-aa061ba29ef2">
      <Execution id="fdf8821a-436f-4377-90f6-287b00716376" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;xml&quot;, expected: &quot;System.Data.DbType.Xml&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6c7af3fb-534c-2a0b-e299-6bd1eabe0220">
      <Execution id="9f11294c-fc42-40f9-8298-ef52df360ec8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Load_Throws_WhenNamespaceMissing" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b2b951d3-19c7-dbe9-e52b-4b27638bb30d">
      <Execution id="2a083885-1bf4-4b5b-862f-294950ef0bda" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests" name="Load_Throws_WhenNamespaceMissing" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests.Duplicate_Table_Uses_Suffix_For_Subsequent" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="4ac4979c-c2d2-4dea-4d0b-9b130754635e">
      <Execution id="59fd54ef-62be-4f8c-9285-d56a90838dd8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderResultSetResolverTests" name="Duplicate_Table_Uses_Suffix_For_Subsequent" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;123abc&quot;, expected: &quot;_123abc&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2b4d05b9-1745-e198-d25e-ffa5903aaba4">
      <Execution id="98cdfe82-a204-4443-88a2-ddd8ea3b6608" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.OutputDir_RespectsOverride" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2e870443-0205-bb36-8c9c-4e6ecdfe0492">
      <Execution id="9dfa5247-58b0-48a4-b163-5c1508a36582" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="OutputDir_RespectsOverride" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;ntext&quot;, expected: &quot;System.Data.DbType.String&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="7ad83542-46c9-ca67-5436-1407c0205341">
      <Execution id="b53b4c22-cb61-4811-b722-77aec3829be1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StoredProcedureAstTests.ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f47f8ff1-50e0-e158-7f86-4409c94112c6">
      <Execution id="7bb15710-89c7-4241-8c38-2f30dcbefed9" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StoredProcedureAstTests" name="ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests.ReturnsJsonArray_True_Should_Use_List_Deserialize_Path" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="7b8f742e-6bda-6acd-1c78-6f0f20470a2e">
      <Execution id="4e437009-f26d-4bda-8e2f-0954724cf014" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.JsonResultSetDeserializationShapeTests" name="ReturnsJsonArray_True_Should_Use_List_Deserialize_Path" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.FirstCharToLower_Works(input: null, expected: null)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="76cc152d-9128-1a77-d630-bb4717854660">
      <Execution id="877641f8-74fe-4050-94a2-30323a5fb600" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="FirstCharToLower_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Configuration.EnvConfigurationTests.DualMode_FallsBackToSpocrJson_WhenEnvMissing" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="97578902-8424-35bc-2989-bf55d034a8f4">
      <Execution id="57ec25e7-d3ff-49eb-b32d-fd0910f94629" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Configuration.EnvConfigurationTests" name="DualMode_FallsBackToSpocrJson_WhenEnvMissing" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorPathEdgeTests.Generates_In_Directory_With_Dots" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="33d1df0d-98a2-1cf9-8a60-07434db78425">
      <Execution id="dd9b4055-bf59-4590-99b5-021add507e86" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbContextGeneratorPathEdgeTests" name="Generates_In_Directory_With_Dots" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SchemaSnapshotStructureTests.Index_Should_List_NewArtefactEntries" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="888231ae-0280-2e34-97fd-db8995e02295">
      <Execution id="a16507ab-18ae-4b7b-9a49-c92c64df02c3" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SchemaSnapshotStructureTests" name="Index_Should_List_NewArtefactEntries" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.MixedCaseTable_NormalizesToTableName" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="16ffffb7-faab-a91b-8378-1bb2bb8d37fd">
      <Execution id="ca5e99af-9b50-46e9-bb78-9853bfa45a5c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests" name="MixedCaseTable_NormalizesToTableName" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests.Interceptor_Receives_Before_And_After_With_Duration" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="07fdf977-fbd0-abf9-9019-02bc3d888e48">
      <Execution id="2edc1c59-46d0-4b7d-befb-c6d955581b14" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Execution.ProcedureInterceptorTests" name="Interceptor_Receives_Before_And_After_With_Duration" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.FullSuiteJsonSummaryTests.FullSuite_Should_Populate_Test_Counters" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="05e71bc8-d68d-b61c-7bba-2d4aefd8b274">
      <Execution id="b7bf2e97-b6dd-40aa-9b68-40b55c0ea036" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.FullSuiteJsonSummaryTests" name="FullSuite_Should_Populate_Test_Counters" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserV5InferenceTests.JsonQuery_Function_Should_Set_NvarcharMax_And_Nullable" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="de06310c-12e3-3ab3-c21f-e512eb124502">
      <Execution id="901ef806-0b4e-4db4-92c6-e800f48a44ce" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserV5InferenceTests" name="JsonQuery_Function_Should_Set_NvarcharMax_And_Nullable" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.FullSuiteExecutionSummaryTests.FullSuite_Should_Write_Counters" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="252ff013-7a23-afcd-436c-79dde7617bea">
      <Execution id="8f2f0cc8-4c2e-4d9d-8efb-7ea9277eabc2" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.FullSuiteExecutionSummaryTests" name="FullSuite_Should_Write_Counters" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SchemaSnapshotStructureTests.UserDefinedTypeFiles_ShouldContain_BaseSqlTypeName" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f1499054-d642-8412-6e83-846bc50af3ff">
      <Execution id="98f8b5a1-ef4f-464a-b795-80ef0d69b6f4" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SchemaSnapshotStructureTests" name="UserDefinedTypeFiles_ShouldContain_BaseSqlTypeName" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests.Verify_Should_Return_Strict_ExitCode_When_Env_Set" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="aa5d8e47-c4af-79c5-5177-950abc5965a5">
      <Execution id="ab217928-bb85-48a0-a7f2-6984ea2e326a" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashCommandsTests" name="Verify_Should_Return_Strict_ExitCode_When_Env_Set" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;money&quot;, expected: &quot;System.Data.DbType.Decimal&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="2d88026b-f56b-c747-a478-42d19c8ff933">
      <Execution id="c95b971b-bdb6-4be3-89c6-367719d6f8fa" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserV5InferenceTests.Cast_Target_Type_Should_Be_Assigned" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="61bfa95a-b7bc-118f-15c5-1fbf580fdfb6">
      <Execution id="d2decc84-af2f-4981-868f-75e41d8effb7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserV5InferenceTests" name="Cast_Target_Type_Should_Be_Assigned" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;int&quot;, expected: &quot;System.Data.DbType.Int32&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="3cb1853e-9f7f-fec6-3601-ee076b422d59">
      <Execution id="96116c26-437c-4e81-bd5f-d91a206627c4" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SchemaSnapshotStructureTests.ExpandedSnapshot_ShouldContain_Types_Tables_Views_Directories" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9c3b9bd0-ef7c-c8d5-3e01-173d9fb3564c">
      <Execution id="f555c066-01ca-4807-ae58-bc13947b9179" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SchemaSnapshotStructureTests" name="ExpandedSnapshot_ShouldContain_Types_Tables_Views_Directories" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_HasExpectedSectionOrder" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b1e1dde0-2c4a-85da-c4da-e593e551e501">
      <Execution id="2d9b3290-cd2d-40b9-b122-3876ff7ed448" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests" name="GeneratedFile_HasExpectedSectionOrder" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.CodeGeneration.ModelGeneratorMultiResultSetTests.Generates_Multiple_Result_Set_Models_With_Suffixes" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="54e27e23-77a3-3bf2-0b73-ca15f455dfed">
      <Execution id="b1db30d2-5037-4b51-a2b5-3e293411d50e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.CodeGeneration.ModelGeneratorMultiResultSetTests" name="Generates_Multiple_Result_Set_Models_With_Suffixes" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.Cli.JsonParserDotAliasBindingTests.DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="1940b804-6796-bddf-6473-11b60014ccf8">
      <Execution id="0fe5a55d-868d-4a6a-98c7-0c6f77980a28" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.Cli.JsonParserDotAliasBindingTests" name="DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests.Resolve_ReturnsExplicitNamespace_WhenSPOCR_NAMESPACE_Set" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="e99cbba1-3087-0d95-6432-25bc7a15cbc5">
      <Execution id="6f417820-f44b-4573-b96d-c3f7a196b082" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Configuration.NamespaceResolverTests" name="Resolve_ReturnsExplicitNamespace_WhenSPOCR_NAMESPACE_Set" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests.ParsesProcedures_AndSeparatesInputOutput" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="367ab638-0be8-b5b4-efae-d766cf126c93">
      <Execution id="68908030-8468-4dac-bcd8-eb05a93274c1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderTests" name="ParsesProcedures_AndSeparatesInputOutput" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SchemaSnapshotStructureTests.ViewSnapshot_Should_Pruned_NullableFalse" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="55909689-d844-996e-7f43-57cf16c7bdab">
      <Execution id="a25de035-44de-4817-8441-ce9e0bfc03c2" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SchemaSnapshotStructureTests" name="ViewSnapshot_Should_Pruned_NullableFalse" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.PreservesOriginalNames_NoRenaming" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="a0d0c1ff-cd08-fcdc-baab-c9f24e4ac852">
      <Execution id="be08891a-7f77-401f-b075-4c1fdc0ac5f7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests" name="PreservesOriginalNames_NoRenaming" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.JsonResultSetTypeMappingTests.JsonResultSet_Should_Remap_StringColumns_ToStrongTypes" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="6c93ad14-318b-54a0-0c29-168d084c36df">
      <Execution id="a93be315-413c-4915-a9cd-b8ab95426181" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.JsonResultSetTypeMappingTests" name="JsonResultSet_Should_Remap_StringColumns_ToStrongTypes" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests.Loader_Throws_For_Missing_Directory" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="0afebfa1-8db4-b7c4-3c01-c53f76d4b0bf">
      <Execution id="1920acc5-b221-45e6-bec4-68607d292312" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.FileSystemTemplateLoaderTests" name="Loader_Throws_For_Missing_Directory" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests.MultiResult_FirstRenamed_SecondGetsSuffix" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="5efbdec8-005e-d1e9-8e12-e9d58f7e50d0">
      <Execution id="e0f5f49b-c1fa-419a-a076-504b51a30e7e" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.SchemaMetadataProviderExtendedTests" name="MultiResult_FirstRenamed_SecondGetsSuffix" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests.Render_Empty_Template_Returns_Empty" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="158cb7cd-b6fd-4431-839d-c1557139f101">
      <Execution id="ec110c70-5109-4967-8fde-deb7f23c2d7d" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Templating.SimpleTemplateEngineTests" name="Render_Empty_Template_Returns_Empty" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ColumnNormalizationTests.PrecisionScale_Should_Appear_As_Paired_For_Decimals" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="462ee968-99c3-a0f3-3435-585b69de251f">
      <Execution id="6c37ad23-76b2-4ea2-9176-fb831cea1ef5" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ColumnNormalizationTests" name="PrecisionScale_Should_Appear_As_Paired_For_Decimals" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests.ExecuteAsync_MultiResult_PopulatesBothLists" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="96ab95f0-0323-541a-5e49-b406ed241429">
      <Execution id="b5babdae-b2b0-4fbe-bddc-e6499f43f04b" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Execution.ProcedureExecutorTests" name="ExecuteAsync_MultiResult_PopulatesBothLists" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;spocr generate command&quot;, expected: &quot;SpocrGenerateCommand&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="ccd4bbdb-4e2e-0b84-54eb-71b690067dd2">
      <Execution id="af9b3fae-da82-483a-901a-7a10775094e7" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;__alreadyPascal&quot;, expected: &quot;__alreadyPascal&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="ee109950-b706-c268-4f17-60f4142f6bf0">
      <Execution id="ae9b83cf-b6a6-4d4d-b0a9-40724be272d1" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetimeoffset&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="b033ceaa-57f8-13f5-6fc8-8b77eea00762">
      <Execution id="b95e4160-848e-481d-9115-ae02add61374" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;varbinary(max)&quot;, expected: &quot;System.Data.DbType.Binary&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="f2cc810b-d899-d69d-143e-df847a052f84">
      <Execution id="0291bdd1-6b22-49f4-9310-fb59ef02a535" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests.ThreeDuplicateResultSets_Produce_IncrementalSuffixes" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="1838ac44-c6c3-b094-e5ab-ebf3fcf3a501">
      <Execution id="c16350b5-155f-4747-aa60-60ff9f86312c" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Metadata.MultiResultSetNamingTests" name="ThreeDuplicateResultSets_Produce_IncrementalSuffixes" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests.Filters_TableTypes_By_BuildSchemas_AllowList" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="689497bd-398e-2b22-7e53-6bc9c1b12402">
      <Execution id="f4582c2f-d9fb-440a-85f7-8f32b400c169" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.TableTypesGeneratorTests" name="Filters_TableTypes_By_BuildSchemas_AllowList" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests.Maps_Known_Types(input: &quot;datetime&quot;, expected: &quot;System.Data.DbType.DateTime2&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="301b701e-9b4c-224d-cf3a-b155b50376c4">
      <Execution id="9d1c8085-de8b-4c3f-af35-7978bcb1bb14" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.SpocRVNext.Generators.DbTypeMappingTests" name="Maps_Known_Types" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.StringExtensionsTests.ToPascalCase_Works(input: &quot;some-value&quot;, expected: &quot;SomeValue&quot;)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="dd881a9b-e1cd-7eab-f579-a9dab9e17c3b">
      <Execution id="8873e4c9-3752-4101-829e-c6601fd393a0" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.StringExtensionsTests" name="ToPascalCase_Works" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.ResultSetNameResolverDynamicSqlTests.TryResolve_DynamicSqlPatterns_ReturnsNull(sql: &quot;CREATE PROCEDURE dbo.DynamicExec AS BEGIN DECLARE &quot;···)" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="9851286f-27f2-aeb1-b243-6b3406fe5219">
      <Execution id="035fa86b-c988-40eb-a628-163ac17a63e8" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.ResultSetNameResolverDynamicSqlTests" name="TryResolve_DynamicSqlPatterns_ReturnsNull" />
    </UnitTest>
    <UnitTest name="SpocR.Tests.WrapperForwardingMixedTests.Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set" storage="c:\projekte\github\spocr\tests\spocr.tests\bin\debug\net8.0\spocr.tests.dll" id="40a71585-36d7-a2bd-e89b-e246ddf34cc0">
      <Execution id="c353a7ac-5744-4339-b3f0-aaa0c3e2167f" />
      <TestMethod codeBase="c:\Projekte\GitHub\spocr\tests\SpocR.Tests\bin\Debug\net8.0\SpocR.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="SpocR.Tests.WrapperForwardingMixedTests" name="Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="c13f10f1-a004-afd2-3408-a6c75d1b74f3" executionId="e8d7379a-254c-4b2a-a2ba-8a03f6dd5a86" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8aa13eea-74a9-2da4-799a-2901dfcced67" executionId="e7109ffe-0590-4c80-af73-c27015969297" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0afebfa1-8db4-b7c4-3c01-c53f76d4b0bf" executionId="1920acc5-b221-45e6-bec4-68607d292312" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4a765a6-c9c1-87ed-d242-099e8b68ea36" executionId="ddbd3236-7c28-4d42-99c9-eecf84a905c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85aeed33-4951-9f79-1a3c-1197a163e4d8" executionId="6d94b498-2127-4ad1-85b2-434fef7e64d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0a5b3e91-25ed-4183-596b-7602ad35f5fb" executionId="27e80c81-18c3-46fc-8e92-2179d30a8af8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b1e1dde0-2c4a-85da-c4da-e593e551e501" executionId="2d9b3290-cd2d-40b9-b122-3876ff7ed448" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="003aa20a-732b-8dd2-99e9-649bbbc15197" executionId="71c3345a-29dd-42df-9dee-b5b6e27186cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bbe016f2-c985-a967-63a3-28c53ae8982f" executionId="b6c53a95-c01c-4eb0-a10f-09cdb04dbee7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aea29fa1-b8d4-d6ff-65a6-6c874c9aa64f" executionId="79bb7ecb-dc68-4da1-9b7b-d5b1239051bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="367ab638-0be8-b5b4-efae-d766cf126c93" executionId="68908030-8468-4dac-bcd8-eb05a93274c1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="55909689-d844-996e-7f43-57cf16c7bdab" executionId="a25de035-44de-4817-8441-ce9e0bfc03c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c664f295-1a5b-a54a-a146-91c03c83eca0" executionId="de0dbdee-2b32-402e-ac81-032f384e248b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65073c41-c98a-344b-72c5-75328c7cf402" executionId="30f786e6-0e3c-4a1b-a5c1-bd3b232e06bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="252ff013-7a23-afcd-436c-79dde7617bea" executionId="8f2f0cc8-4c2e-4d9d-8efb-7ea9277eabc2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b497dfb4-8f8a-3574-c4cb-5508852ffc12" executionId="76e49357-adb0-412b-bef9-279740353824" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a56a260-1ef8-d2bf-67ad-5f7953ba123e" executionId="fe74923d-4a0d-4866-b548-33eb608c52ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c93ad14-318b-54a0-0c29-168d084c36df" executionId="a93be315-413c-4915-a9cd-b8ab95426181" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="888231ae-0280-2e34-97fd-db8995e02295" executionId="a16507ab-18ae-4b7b-9a49-c92c64df02c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0eb28a37-f0ee-7fcc-66eb-97c0fd3d0c49" executionId="7e3617ec-51a9-41c5-8958-9d4e3de573a2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e7288453-574f-09fe-6b45-2f5d799357d0" executionId="38d075d0-c334-48c8-961e-b0e4c4de5bfa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4c28ba82-bd75-5596-d8dc-73c43cff1045" executionId="d225c4e8-75cc-4874-9a46-84bb3aeab5d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="657921b0-9e76-65c7-527d-e042084b0a72" executionId="b5db266e-8a68-42a7-ae9c-54da642c6c72" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c57cd40c-828a-24c1-0b7d-2aabad50d7e0" executionId="a10e63a0-1f9f-47c1-a946-50511d49977b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fc622026-4829-25ac-689b-8d48120a17f3" executionId="2aabe591-c4b3-4d4d-8d33-dd6e28240bd9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bf4e52d2-269c-228d-8e0d-bd8d3b3f5622" executionId="8c32e3b8-b663-44c3-9302-a470d95ee016" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="89d6a87f-0476-7eb2-bb92-2640d7503f49" executionId="c27d59db-8b16-4d7f-b6cf-8211d7f7da68" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3032ffa2-c459-521f-bcf6-9ba5ade98caa" executionId="7afc0c55-a221-4fdd-8f2e-61709ab0014a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2e5a69b-95b0-11b7-748b-59a021688a62" executionId="5f005d32-add1-4082-8c25-ca9bf5626a39" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3cb1853e-9f7f-fec6-3601-ee076b422d59" executionId="96116c26-437c-4e81-bd5f-d91a206627c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7e71660c-171e-6dc0-a3d9-a4801da95574" executionId="e18dbd67-7b16-4725-887a-dda3194e9342" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="158cb7cd-b6fd-4431-839d-c1557139f101" executionId="ec110c70-5109-4967-8fde-deb7f23c2d7d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="67d0efa7-b4bf-e345-0157-58cc9bbb8c49" executionId="177a52e6-23e5-43e0-b46a-f9b22eba13cd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6667483d-cada-4113-8c04-7f7cc53957b4" executionId="77ba52d5-e309-4f05-b36a-fc2a673eab22" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee109950-b706-c268-4f17-60f4142f6bf0" executionId="ae9b83cf-b6a6-4d4d-b0a9-40724be272d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="92a7fcb9-fd96-3c60-dd27-7ae8f78b2955" executionId="042da50a-a5d7-4dda-b29c-137dfe510015" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61bfa95a-b7bc-118f-15c5-1fbf580fdfb6" executionId="d2decc84-af2f-4981-868f-75e41d8effb7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dba03faa-b621-8cf4-5567-8b61fe43eecf" executionId="8cb08421-b9e9-4bee-969a-5300eee94284" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ab785694-2231-7358-863f-c34c2f0bb261" executionId="eb1c9a1e-b6ca-41ff-9848-5698207779e3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="06a02a93-20c5-fddc-e17e-66032bfc8fb7" executionId="72bc3a2b-070a-4d73-a11e-7a46ad7c1f26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a5ca2523-b4f6-ee0e-288b-ee9e54487a97" executionId="f3b73b96-573f-4f0b-9836-6cd060f1b43e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="689497bd-398e-2b22-7e53-6bc9c1b12402" executionId="f4582c2f-d9fb-440a-85f7-8f32b400c169" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="33d1df0d-98a2-1cf9-8a60-07434db78425" executionId="dd9b4055-bf59-4590-99b5-021add507e86" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6beb158-636b-a0d4-cf9f-493e86cd87c4" executionId="b07d2ac8-604b-4041-895a-f1e015e21ef6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45c262da-a20c-e20f-1b3c-5bd2ab24299a" executionId="b55868c7-7541-46ae-bef9-7550ab3879cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9d78bb61-69f2-8609-4581-bb08b9a82eae" executionId="74c56a56-1365-42e3-9780-7f63b1a07e06" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4f80185b-9a1d-86e4-5cad-bcb58e578d21" executionId="a61c9c4b-78b1-45f4-b180-273d7979e382" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b2b951d3-19c7-dbe9-e52b-4b27638bb30d" executionId="2a083885-1bf4-4b5b-862f-294950ef0bda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4db3a0a8-ece1-dd11-e239-b64cdfcc07eb" executionId="f78bbab1-3550-4135-b18a-fdade52c9110" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="01feda20-8602-30ba-e317-89ca2962c0d5" executionId="e25db951-b678-4c5b-879f-7638f1060c6d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="317808e2-e09e-ff12-92b6-fe2348538b70" executionId="627819ad-24d3-4174-9a56-6095fab3437f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3474c809-aa61-c509-e2af-28fe246f1afb" executionId="4d44a044-ebc3-4269-bbeb-a31164b0e046" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a353a595-4fa8-94a9-5365-731de7ea926e" executionId="d6d96641-9da2-4014-ae16-b393ca36a3d3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="301b701e-9b4c-224d-cf3a-b155b50376c4" executionId="9d1c8085-de8b-4c3f-af35-7978bcb1bb14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b0c7c10e-5dc7-f793-2f0a-dd0a9c6f5a2c" executionId="4e801b9c-ea2e-4a74-98d5-18129b6814ae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5fdacca5-99f4-558c-74bd-f62a73208905" executionId="0f07f659-fa6f-4280-bc72-bf07373c7226" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="480b297a-def6-db2f-2744-da909d3cb419" executionId="5253db15-242c-4826-b797-bb102151a445" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dd881a9b-e1cd-7eab-f579-a9dab9e17c3b" executionId="8873e4c9-3752-4101-829e-c6601fd393a0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e903e852-c79e-a214-ffe0-1ccfc40d81ba" executionId="25692ed1-c0da-4fa0-9128-d27a8e169e01" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fe7ce78-23fd-f783-ef06-b74a29c9d28e" executionId="d5b62803-4b4c-4545-9fd7-2f8d3f473076" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1d2f585a-a6ba-383d-5178-822ef8f6a99c" executionId="1a11f9e3-22b0-41d0-a871-a613603394b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05f124a9-2672-d95a-714d-f62d89ff295b" executionId="315dac61-74ca-42ce-9e59-6bd635a735e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b1b615f-4c6e-d64b-c943-4bab8f2711dd" executionId="84dba5be-23c9-46af-8766-0e8ec2b33f5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9851286f-27f2-aeb1-b243-6b3406fe5219" executionId="035fa86b-c988-40eb-a628-163ac17a63e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c7af3fb-534c-2a0b-e299-6bd1eabe0220" executionId="9f11294c-fc42-40f9-8298-ef52df360ec8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5a9f0f15-1a7e-4d62-e0d0-714dcfb24817" executionId="eed51627-c1f1-497d-b59b-546f3f3ffd50" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="16ffffb7-faab-a91b-8378-1bb2bb8d37fd" executionId="ca5e99af-9b50-46e9-bb78-9853bfa45a5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9012aed6-d062-f70f-8c52-c6eb9b56b5ef" executionId="9c918f2b-a4a8-4d5e-8028-c24b7c003126" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e5372233-516a-b67a-d9b1-8445078b12d0" executionId="f626139e-1258-4de4-a1eb-1e33e7f31f95" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f809b1a-f266-2517-29e3-c5abc8a1939e" executionId="c48945d6-a270-4173-a87c-a608c8dad8d3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="94d5c953-51e1-24e8-fe8a-7d2a546f7be5" executionId="c3c5246c-86af-4ed4-887d-c296ac831407" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="de08d421-69df-8e08-2c8d-a8eb920803d3" executionId="9ecf9366-be7b-47d8-8280-c43bf4bd86b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3c5ef77-90ab-2d1d-f3fb-122ef055422f" executionId="13149483-ac2a-4ea8-9813-13656762113d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1499054-d642-8412-6e83-846bc50af3ff" executionId="98f8b5a1-ef4f-464a-b795-80ef0d69b6f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fb4d325-f06a-b874-ed38-9180caa3966c" executionId="06081c98-1082-4aa3-b2ba-310816abce7b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a613410a-d8da-581f-4276-abd2e99ca94d" executionId="26fccd42-4640-46a8-81db-0ea9e03fe8dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3397ddfa-adaf-0155-6729-62e2656d6ea7" executionId="da9011fa-f469-45b5-ae2b-31e173dcfd0e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2d3c9ad9-78ad-606e-8e0f-8d0243af77e9" executionId="64a40535-fd7f-43fa-b4d3-7cee6a069e65" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05e71bc8-d68d-b61c-7bba-2d4aefd8b274" executionId="b7bf2e97-b6dd-40aa-9b68-40b55c0ea036" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d4b1079d-849e-d813-909e-4829c02daa34" executionId="41b4c62a-cfa4-45fb-b755-a7e3c69d02c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9f09a054-e5b3-8418-76f1-e5e1eb95c936" executionId="48773f8c-d042-4f50-abc2-f0d1352f24eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4a1176f9-6356-ff8f-9e36-a4eb0fb78171" executionId="af26f003-0bf6-4efc-8a74-30468404c144" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="506c0bb1-02f1-2e4f-0f6b-b767f3bc122b" executionId="f54ff4c6-d81c-4ae6-9962-a483c58f1e86" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="54e27e23-77a3-3bf2-0b73-ca15f455dfed" executionId="b1db30d2-5037-4b51-a2b5-3e293411d50e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4cb73cdd-aa3c-91d7-d5a8-46b312b364aa" executionId="270c5f09-df0a-4f49-a6b9-35a18bfd34ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f47f8ff1-50e0-e158-7f86-4409c94112c6" executionId="7bb15710-89c7-4241-8c38-2f30dcbefed9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9c3b9bd0-ef7c-c8d5-3e01-173d9fb3564c" executionId="f555c066-01ca-4807-ae58-bc13947b9179" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="62eeeb7c-0a57-eb77-1ddc-9375639867e3" executionId="789a9bf4-51b1-48b3-b304-4ede0d9d5ade" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9e4b9ec7-d511-587a-1ff1-dbe8a5a48da1" executionId="40471fe1-40d3-4571-ae8f-52c187cc132c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1838ac44-c6c3-b094-e5ab-ebf3fcf3a501" executionId="c16350b5-155f-4747-aa60-60ff9f86312c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="69092e1a-47bd-364b-94b1-62e5fce0fb2e" executionId="a32020b1-9095-4409-a285-2269dd1b028c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83188dd6-8f54-e80d-3a24-e4070295391b" executionId="d516d9e5-9a08-488a-bc7c-c9c4bcd9182b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="972e4b70-45c8-af01-3e2d-c4ec707fc4bc" executionId="b854456f-d204-4984-b190-4c0870c44326" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fcb7e71b-5a80-1271-161f-5d30d657658f" executionId="8c6cfa89-8dac-476e-bbd2-e22c2004f626" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b4d05b9-1745-e198-d25e-ffa5903aaba4" executionId="98cdfe82-a204-4443-88a2-ddd8ea3b6608" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="077dd998-9e96-e06e-8c06-da4296faf010" executionId="57d9b641-544d-46e4-b3b1-be005a2af503" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cc327d91-e1e0-e9f9-95c8-ee07000743e1" executionId="83621eed-7aef-4ad9-bf80-a791c624e070" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="083cb890-ee03-5962-0cd5-9e8d1873b3d7" executionId="5a9bd6ed-3fe5-44dd-8d8d-70af1d72884c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4b90f7d9-4f50-df6f-1167-40d44f6fa4db" executionId="cb097fa3-3771-4e00-b4c5-ba36e97908ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="91d4f3a6-3e74-068e-1531-235897e85a9e" executionId="17cf6bd0-ffa2-4a12-8b76-ac228c5b1bec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bacb3668-e872-60bf-f20c-f38299f4a2c1" executionId="10225c4e-05c0-4c30-83be-5f4ed2ba4b72" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eccb3c19-90d5-df28-fec2-559b439c390a" executionId="ad25e1ae-e1f6-4872-9ae4-e6593bcfd3b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4bfe9218-fd5b-2175-67f4-aefb242cb1e5" executionId="7c822ee9-d0f8-40ce-a298-0ce368266e4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6ae69cc6-71db-bbd7-37e0-d4b9e0090538" executionId="3fe1c0d5-b560-4e7e-8b48-3746e6565667" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4b10f895-d52f-1024-073d-9c5db214bf2d" executionId="8037cefa-e73e-42f9-b1ac-8e43f61cc171" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="24151ffc-5de1-e54a-43da-706b2955e484" executionId="80e33577-9596-4f1b-9776-8e683aae9db7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76430dec-c954-1d80-8f95-4eaf222aa34a" executionId="e9bf877f-5ba8-4969-96bd-e20f3e29a7e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76cc152d-9128-1a77-d630-bb4717854660" executionId="877641f8-74fe-4050-94a2-30323a5fb600" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0f0e595c-aad5-2fb5-6227-12875099a268" executionId="695a41fc-c5a3-463b-b7eb-b1ff2a8cc561" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0c8893c4-1fbc-7190-5351-c18bf27d9b7e" executionId="4e6992fa-d890-400e-94a6-136d520df9ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b64a487-6ea9-9d4a-c402-f30f35c197b3" executionId="ebe745ad-4d8d-4b3c-bc55-28efb50da323" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c96c8b6c-6f06-a3fc-01cf-95324dc73de8" executionId="d8f1cee6-3502-416e-a36d-83a76063144e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be498831-d023-dcad-bc2f-97e6ef1600ea" executionId="f7fa05fa-ca87-47ed-91d1-5b16dea998c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b033ceaa-57f8-13f5-6fc8-8b77eea00762" executionId="b95e4160-848e-481d-9115-ae02add61374" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3cdcd402-840c-6c6d-c6d7-c68ed6e2c1e9" executionId="b6ad91d0-b0d1-44e9-8592-2b05fa1ca4ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3ca4710-9b87-bc92-04a1-398d85c1e339" executionId="b5db7172-5745-4979-9969-5ec8778318fd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a2bbdb73-4296-02f1-6508-f29c9db8ff8a" executionId="4293d58e-9054-458b-85e3-eb0397e70b03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e65bc9e8-01dc-6764-6fb4-1db2483f7a6a" executionId="55e6a365-496a-4b77-aad6-699e93765d5d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f332cc25-7f1b-aaa8-c1a8-ec8029800fd8" executionId="d8ef2a1a-0364-475a-87e0-5ef08eebc689" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ce4aedd-c57b-4e35-70bf-ca3db5c25084" executionId="6f23eab4-642e-46e3-b3e7-6e26c59c9680" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0375fd74-9a8b-f2fe-074c-ebdb26cbec16" executionId="6a4df312-19df-4524-ba0d-7187c4844c92" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fa663b88-06f2-29a7-2d32-aa061ba29ef2" executionId="fdf8821a-436f-4377-90f6-287b00716376" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fca1487-0a5d-7401-1ab7-2def05861f0d" executionId="57d902c7-219a-41f5-aa28-a0003d1d2395" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a44ed467-7c8e-f860-b089-c8dec15b1778" executionId="376d0026-126a-4c2b-8b97-12241314cdc0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0cc3e73-e902-f987-da02-02f56a2be4a8" executionId="64c64727-5230-4428-9433-c321936a2c2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d567d2be-f35e-63a0-3d7c-f8c96bc88c81" executionId="04a3432e-54ee-4f33-909f-294091c9fae8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cf63d430-d354-c4e6-5daa-9f5dfbf3671b" executionId="2c32ec07-5b0b-42bd-be68-bc99522552fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7a714aed-d456-55fd-bd67-60e0f0d9e9b1" executionId="881be78e-724f-4050-8d32-e0d29087e2c6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0d2bfa2d-9728-96b2-5669-1ea18b160d93" executionId="47c20654-4ff8-4af6-81e9-f898904e44d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="860d8f71-1ac3-4b2f-ffb5-d78f329d024d" executionId="332535e1-e635-4c8d-9fe2-aa05e2af51ad" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="de06310c-12e3-3ab3-c21f-e512eb124502" executionId="901ef806-0b4e-4db4-92c6-e800f48a44ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9e8e7463-a219-bbba-6ec2-ed03f1309fe7" executionId="338575cf-eb88-4b57-872f-bcdfa00fa23d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="463521a5-20ef-091c-7303-266b24a7bb63" executionId="e582fbe9-ffec-4c16-ae8a-b2284c5b6699" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c28a542-9d97-af13-23b5-01384ece44f4" executionId="3766a90e-c364-4727-9a38-c083e6b53a6e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e870443-0205-bb36-8c9c-4e6ecdfe0492" executionId="9dfa5247-58b0-48a4-b163-5c1508a36582" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9cf9315-c5e1-56b0-3017-b933246b67f5" executionId="c85d3a76-3546-4270-8177-40af3a5de168" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7ad83542-46c9-ca67-5436-1407c0205341" executionId="b53b4c22-cb61-4811-b722-77aec3829be1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca137924-1ddb-c9c8-818d-6c9a27bff3a1" executionId="8f7afdb6-3f4d-4a9a-abfb-ae12d88ef4ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="40a71585-36d7-a2bd-e89b-e246ddf34cc0" executionId="c353a7ac-5744-4339-b3f0-aaa0c3e2167f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c2e83a33-2588-218c-5f35-f8d49dbdca6a" executionId="e088d041-309f-44ac-8317-de068d947774" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f03e3ae9-c73e-8bc9-d2c8-98a5d6052f22" executionId="a0dfc9e6-bcf5-4728-8f4c-7abbd9e16048" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e220517-5b74-1ea3-1e82-9d770d270225" executionId="ae6bb730-7319-420d-9f6b-8cc9d3247c6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0d0c1ff-cd08-fcdc-baab-c9f24e4ac852" executionId="be08891a-7f77-401f-b075-4c1fdc0ac5f7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0683c4b1-c463-1781-e089-d2667a3d3163" executionId="f94a74f1-6417-4d40-96da-47270020876b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b41531c6-90a7-6477-2545-450ac00f98ca" executionId="7c12b47b-b151-486b-ba2b-5524e0c29ef5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa5d8e47-c4af-79c5-5177-950abc5965a5" executionId="ab217928-bb85-48a0-a7f2-6984ea2e326a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8a0d999a-0aac-c38a-7d4b-1e873169211e" executionId="d40a8d93-fe1d-4e1c-ad68-8100614dc10e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="58d3a6f5-da27-4dc1-2c46-076a7427d9c9" executionId="ca413f83-5642-48e3-8743-e5d834f6bf61" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6775043c-8cd9-ca63-0cbf-d18ed15fc231" executionId="d8ce0940-3980-4859-8fcc-bd869b55db85" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f47d4c70-e88f-c8dc-b372-9a858bbb5fae" executionId="569f001e-1ca2-47c0-a625-dc84e4af196c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e99cbba1-3087-0d95-6432-25bc7a15cbc5" executionId="6f417820-f44b-4573-b96d-c3f7a196b082" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c2657d5f-1ee3-cbda-b983-4e693e7a760a" executionId="7e4f9da0-4da8-4d68-808b-97801eae6243" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52775da7-8070-eb26-b5b8-0b197d2d843d" executionId="a5e2ff5e-8fc6-4e1a-a80c-86531ba9dda0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="01c3fc25-0ff4-ce2f-2f43-51b9e87b4ea7" executionId="4a193571-8852-496e-9793-1eb15ced4bde" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="035b84f3-3f34-beec-d335-657098393984" executionId="d9ccd384-af96-49bb-9efb-ccc152c26d2e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0c0df242-24d2-4a48-dc00-f38e36d13a48" executionId="d338a1de-2461-4c25-b828-389174242234" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0eaf6ae6-00c1-698a-2e63-817926873ce4" executionId="9c21c0d3-9c26-477a-810b-524b0487af97" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8cdb6bae-2565-9285-033a-8823738e4b13" executionId="b8282c4d-3239-4533-8b4f-b08d27c73f70" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4ac4979c-c2d2-4dea-4d0b-9b130754635e" executionId="59fd54ef-62be-4f8c-9285-d56a90838dd8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e92b4fad-f129-dc66-08eb-fa8cc18944fd" executionId="0fd47487-0f07-498e-817a-92a61fd24ddb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="18604c25-f454-22fb-3c22-192b085f8fa2" executionId="60dd8782-5f43-428d-bf51-45efda4713f7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5efbdec8-005e-d1e9-8e12-e9d58f7e50d0" executionId="e0f5f49b-c1fa-419a-a076-504b51a30e7e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76928d9a-8d02-6f2f-edc6-a9e3bfc149cf" executionId="3ae5b4d1-a3cf-4f66-9b70-38b414f1cf2e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="72357617-4107-7fe2-c7b5-2f9787d29913" executionId="984371c4-6d9c-48a3-a44e-b3778c9087b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ccd4bbdb-4e2e-0b84-54eb-71b690067dd2" executionId="af9b3fae-da82-483a-901a-7a10775094e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83b97a31-3ea9-fb05-5592-715f3964fd2b" executionId="5b9a58b3-8175-480b-9c91-9bf4ba35a59c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="80e37b89-41d1-9d31-c1ed-01ae1a9c344f" executionId="2f7a31af-82fb-4949-aa55-8ff7908bad29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="07fdf977-fbd0-abf9-9019-02bc3d888e48" executionId="2edc1c59-46d0-4b7d-befb-c6d955581b14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="462ee968-99c3-a0f3-3435-585b69de251f" executionId="6c37ad23-76b2-4ea2-9176-fb831cea1ef5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="97578902-8424-35bc-2989-bf55d034a8f4" executionId="57ec25e7-d3ff-49eb-b32d-fd0910f94629" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0035af6-ff30-774c-5ae8-8558b88a4f35" executionId="7f6916ce-6740-4dd2-8b87-5d803418239f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1940b804-6796-bddf-6473-11b60014ccf8" executionId="0fe5a55d-868d-4a6a-98c7-0c6f77980a28" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="443b1fbf-3a37-93c0-372d-99140bd34240" executionId="805c64c4-380e-4942-827b-bd0109f38654" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3770c957-5a49-2af5-37b4-087b1bc86866" executionId="ca7ea998-1671-47de-abfa-fa01cadddd43" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7b8f742e-6bda-6acd-1c78-6f0f20470a2e" executionId="4e437009-f26d-4bda-8e2f-0954724cf014" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8391dc21-5f23-6ab1-605d-c765aab8f25f" executionId="b1e95ae8-5124-4787-9996-547dc4981a5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="14217d24-bad4-b961-96a3-fc1d927b4ca8" executionId="ac1c9ecc-fccb-4608-a3e6-1962fffe3ad3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96ab95f0-0323-541a-5e49-b406ed241429" executionId="b5babdae-b2b0-4fbe-bddc-e6499f43f04b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3dc3968-996d-860e-7920-c40721303f6f" executionId="d98ec76c-8a38-44ca-8617-146cae7ae71c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd3abb7f-93b7-59d4-1d5a-fe807cd68d98" executionId="56be4138-10da-4440-8c7b-41eaa6cc3d26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20df6d10-a5c0-3fd5-a363-881eb9af2744" executionId="a4cab2ff-29f8-4f1a-a026-8c2812103990" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2cc810b-d899-d69d-143e-df847a052f84" executionId="0291bdd1-6b22-49f4-9310-fb59ef02a535" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2d88026b-f56b-c747-a478-42d19c8ff933" executionId="c95b971b-bdb6-4be3-89c6-367719d6f8fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="399e7843-362c-cc59-026d-0c8a5af954f5" executionId="cbd9e64e-5678-489b-97ec-f240e20cb3bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Ergebnisse nicht in einer Liste" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Alle geladenen Ergebnisse" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="184" executed="184" passed="171" failed="13" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.1.5+1b188a7b0a (64-bit .NET 8.0.21)&#xD;
[xUnit.net 00:00:00.06]   Discovering: SpocR.Tests&#xD;
[xUnit.net 00:00:00.10]   Discovered:  SpocR.Tests&#xD;
[xUnit.net 00:00:00.12]   Starting:    SpocR.Tests&#xD;
[xUnit.net 00:00:00.19]       Assert.Single() Failure: The collection was empty&#xD;
[xUnit.net 00:00:00.19]       Stack Trace:&#xD;
[xUnit.net 00:00:00.19]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\AggregateTypingExtendedTests.cs(37,0): at SpocR.Tests.AggregateTypingExtendedTests.Aggregates_Should_Have_Inferred_Types()&#xD;
[xUnit.net 00:00:00.19]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:00.19]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[xUnit.net 00:00:00.32]       System.NullReferenceException : Object reference not set to an instance of an object.&#xD;
[xUnit.net 00:00:00.32]       Stack Trace:&#xD;
[xUnit.net 00:00:00.32]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\CodeGeneration\ModelGeneratorJsonEmptyModelTests.cs(83,0): at SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests.Generates_Xml_Doc_For_Empty_Json_Model()&#xD;
[xUnit.net 00:00:00.32]         --- End of stack trace from previous location ---&#xD;
[spocr vNext] Create new .env now? (Y/n): [spocr vNext] Info: schema directory not found: C:\Users\sgies\AppData\Local\Temp\sleue0qc.44c\.spocr\schema&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\lhbdvmbp.kvu\.spocr\schema\snap.json (utc=2025-10-23T16:07:42.8599644Z size=360)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\lhbdvmbp.kvu\.spocr\schema\snap.json&#xD;
[xUnit.net 00:00:00.38]       Shouldly.ShouldAssertException : accountId.SqlTypeName&#xD;
[xUnit.net 00:00:00.38]           should be null but was&#xD;
[xUnit.net 00:00:00.38]       "int"&#xD;
[xUnit.net 00:00:00.38]       Stack Trace:&#xD;
[xUnit.net 00:00:00.38]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\Cli\JsonParserDotAliasBindingTests.cs(49,0): at SpocR.Tests.Cli.JsonParserDotAliasBindingTests.DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser()&#xD;
[xUnit.net 00:00:00.38]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:00.38]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-c90933ea545c42d39d8a5fab92500b25\.spocr\schema\legacy.json (utc=2025-10-23T16:07:42.8986709Z size=481)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-c90933ea545c42d39d8a5fab92500b25\.spocr\schema\legacy.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-json-remap-6e3ff5685be84ec58e08517c272e86ad\.spocr\schema\legacy.json (utc=2025-10-23T16:07:42.9153418Z size=791)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-json-remap-6e3ff5685be84ec58e08517c272e86ad\.spocr\schema\legacy.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-c6bdbe0d1f46405da25e2e713ae59809\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.0714001Z size=466)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-c6bdbe0d1f46405da25e2e713ae59809\.spocr\schema\snapshot-test.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-bed3a60bd47b4021a312dcf97b664c27\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.0792297Z size=423)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-bed3a60bd47b4021a312dcf97b664c27\.spocr\schema\snapshot-test.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\e52001ae41694d4091898aa6df2180ac\.spocr\schema\dyn-users.json (utc=2025-10-23T16:07:43.0841815Z size=236)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\e52001ae41694d4091898aa6df2180ac\.spocr\schema\dyn-users.json&#xD;
[spocr vNext] Info: using legacy 'StoredProcedures' key&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\0dabbef600e64e30a83b83b59ea42932\.spocr\schema\dyn-multi.json (utc=2025-10-23T16:07:43.0979547Z size=305)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\0dabbef600e64e30a83b83b59ea42932\.spocr\schema\dyn-multi.json&#xD;
[spocr vNext] Info: using legacy 'StoredProcedures' key&#xD;
[spocr vNext] Info: BuildSchemas allow-list active -&gt; 1 of 2 procedures retained. Removed: 1. Schemas: Alpha&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-xschema-diag-WrapperOnlyTest-23e541de200440db8e762594d647b718\.spocr\schema\legacy.json (utc=2025-10-23T16:07:43.1156625Z size=871)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-xschema-diag-WrapperOnlyTest-23e541de200440db8e762594d647b718\.spocr\schema\legacy.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-xschema-diag-MixedWrapperTest-6ab868bc52da4726931bd3c2b68e61e0\.spocr\schema\legacy.json (utc=2025-10-23T16:07:43.1156625Z size=951)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-xschema-diag-MixedWrapperTest-6ab868bc52da4726931bd3c2b68e61e0\.spocr\schema\legacy.json&#xD;
[xUnit.net 00:00:00.60]       System.NullReferenceException : Object reference not set to an instance of an object.&#xD;
[xUnit.net 00:00:00.60]       Stack Trace:&#xD;
[xUnit.net 00:00:00.60]         c:\Projekte\GitHub\spocr\src\DataContext\DbContext.cs(99,0): at SpocR.DataContext.DbContext.ListAsync[T](String queryString, List`1 parameters, CancellationToken cancellationToken, AppSqlTransaction transaction)&#xD;
[xUnit.net 00:00:00.60]         c:\Projekte\GitHub\spocr\src\Managers\SchemaManager.cs(54,0): at SpocR.Managers.SchemaManager.ListAsync(ConfigurationModel config, Boolean noCache, CancellationToken cancellationToken)&#xD;
[xUnit.net 00:00:00.60]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\WrapperForwardingMixedTests.cs(91,0): at SpocR.Tests.WrapperForwardingMixedTests.RunSchemaManagerAsync(FakeDbContext db)&#xD;
[xUnit.net 00:00:00.60]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\WrapperForwardingMixedTests.cs(113,0): at SpocR.Tests.WrapperForwardingMixedTests.Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set()&#xD;
[xUnit.net 00:00:00.60]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:00.62]       Assert.Equal() Failure: Values differ&#xD;
[xUnit.net 00:00:00.62]       Expected: 0&#xD;
[xUnit.net 00:00:00.62]       Actual:   null&#xD;
[xUnit.net 00:00:00.62]       Stack Trace:&#xD;
[xUnit.net 00:00:00.62]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\StoredProcedureAstTests.cs(21,0): at SpocR.Tests.StoredProcedureAstTests.ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper()&#xD;
[xUnit.net 00:00:00.62]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:00.62]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[xUnit.net 00:00:00.62]       Assert.Single() Failure: The collection was empty&#xD;
[xUnit.net 00:00:00.62]       Stack Trace:&#xD;
[xUnit.net 00:00:00.62]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\StoredProcedureAstTests.cs(43,0): at SpocR.Tests.StoredProcedureAstTests.ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False()&#xD;
[xUnit.net 00:00:00.62]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:00.62]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[xUnit.net 00:00:00.63]       Shouldly.ShouldAssertException : code&#xD;
[xUnit.net 00:00:00.63]           should contain (case insensitive comparison)&#xD;
[xUnit.net 00:00:00.63]       "Task&lt;List&lt;UserListAsJson&gt;&gt; UserListAsJsonDeserializeAsync"&#xD;
[xUnit.net 00:00:00.63]           but was actually&#xD;
[xUnit.net 00:00:00.63]       "using System;
using Microsoft.Data.SqlClient;

namespace Test.App.DataContext.StoredProcedures.Dbo
{..."&#xD;
[xUnit.net 00:00:00.63]       Stack Trace:&#xD;
[xUnit.net 00:00:00.63]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\CodeGeneration\StoredProcedureGeneratorSnapshotTests.cs(112,0): at SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests.Snapshot_Raw_And_Deserialize_Pattern()&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[xUnit.net 00:00:00.63]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:00.63]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[spocr vNext] Info: TableTypes allow-list applied -&gt; 1/1 retained (removed 0). Schemas: Alpha&#xD;
[spocr vNext] Info: TableTypes allow-list applied -&gt; 1/2 retained (removed 1). Schemas: Alpha&#xD;
[spocr vNext] Info: Template cache-state initialization; hash=b70ed432 \u001a reload metadata. path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\cache\cache-state.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.1823486Z size=623)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=0 procedures=2&#xD;
[spocr vNext] Info: Template cache-state unchanged (hash=b70ed432) path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\cache\cache-state.json.&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.1823486Z size=623)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_0ac62b5889024c7dba2953694f7f2121s4gm2vr4.3b4\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=0 procedures=2&#xD;
[spocr vNext] Info: Template cache-state initialization; hash=b70ed432 \u001a reload metadata. path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\cache\cache-state.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2158351Z size=623)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=0 procedures=2&#xD;
[spocr vNext] Info: Template cache-state unchanged (hash=b70ed432) path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\cache\cache-state.json.&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2158351Z size=623)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_7592e9712e2b4b349a6f82276bd5b38a5sd1yzzz.odn\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=0 procedures=2&#xD;
[dbctx] mode=dual dcPath='DataContext' cwd=C:\Users\sgies\AppData\Local\Temp\hzpd2fqb.244 rawWorking=C:\Users\sgies\AppData\Local\Temp\hzpd2fqb.244 rootDir=C:\Users\sgies\AppData\Local\Temp\hzpd2fqb.244 spocrDir=C:\Users\sgies\AppData\Local\Temp\hzpd2fqb.244\SpocR&#xD;
SpocR/ISpocRDbContext.cs (created)&#xD;
SpocR/SpocRDbContextOptions.cs (created)&#xD;
SpocR/SpocRDbContext.cs (created)&#xD;
SpocR/SpocRDbContextServiceCollectionExtensions.cs (created)&#xD;
[dbctx] Skip endpoints (TFM '&lt;null&gt;' \u001a major '&lt;none&gt;' != net10)&#xD;
[dbctx] Skipped (generator mode is 'legacy')&#xD;
[spocr vNext] Info: Template cache-state initialization; hash=b70ed432 \u001a reload metadata. path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\cache\cache-state.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2769085Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Info: Template cache-state unchanged (hash=b70ed432) path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\cache\cache-state.json.&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2769085Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_274be78821ec453c88064dc80a816d10tsxofksx.cyw\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Info: Template cache-state initialization; hash=b70ed432 \u001a reload metadata. path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\cache\cache-state.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2987555Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Info: Template cache-state unchanged (hash=b70ed432) path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\cache\cache-state.json.&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.2987555Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_2b21cf33b4d2432ea5918cd8caa20bc8q1r2oe0m.xwp\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Info: Template cache-state initialization; hash=b70ed432 \u001a reload metadata. path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\cache\cache-state.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.3158934Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Info: Template cache-state unchanged (hash=b70ed432) path=C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\cache\cache-state.json.&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\schema\snapshot.json (utc=2025-10-23T16:07:43.3158934Z size=1327)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr_vnext_15be43a120ce442b88db6208c35c81abotnqecdf.dhn\.spocr\schema\snapshot.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-json-bool-dt-16389b82941f4bbb9e1ab03100f5422c\.spocr\schema\legacy.json (utc=2025-10-23T16:07:43.3377255Z size=826)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-json-bool-dt-16389b82941f4bbb9e1ab03100f5422c\.spocr\schema\legacy.json&#xD;
[xUnit.net 00:00:00.82]       optionalRef sollte als nullable markiert sein&#xD;
[xUnit.net 00:00:00.82]       Stack Trace:&#xD;
[xUnit.net 00:00:00.82]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\JsonTypeMappingBasicTests.cs(42,0): at SpocR.Tests.JsonTypeMappingBasicTests.OptionalRef_Should_Be_Nullable_Int()&#xD;
[xUnit.net 00:00:00.82]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:00.82]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-1605f16d5b4e4956bd1a5e127dcfd381\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.3683678Z size=663)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-1605f16d5b4e4956bd1a5e127dcfd381\.spocr\schema\snapshot-test.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-7603c6acb7464bfc8fa2789d2a7ccd5b\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.3713657Z size=412)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-7603c6acb7464bfc8fa2789d2a7ccd5b\.spocr\schema\snapshot-test.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-5c9e0cdd93ab456e84c14ea385904681\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.3721073Z size=447)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-5c9e0cdd93ab456e84c14ea385904681\.spocr\schema\snapshot-test.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-test-53ba42039afd474abb1f41b24cebc2ca\.spocr\schema\snapshot-test.json (utc=2025-10-23T16:07:43.3721073Z size=665)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-test-53ba42039afd474abb1f41b24cebc2ca\.spocr\schema\snapshot-test.json&#xD;
?? SpocR Testing Framework&#xD;
==========================&#xD;
?? Running validation tests only...&#xD;
?? Test Results Summary&#xD;
=====================&#xD;
Validation Tests: 3/3 passed&#xD;
Overall Result: ? SUCCESS&#xD;
?? JSON summary written: .artifacts\test-summary.json&#xD;
[FullSuiteJsonSummaryTests] Warning: total remained 0 after retries, but success=true. Soft-passing test.&#xD;
[FullSuiteExecutionSummaryTests] Skipping full-suite meta test (set SPOCR_ENABLE_FULLSUITE_META=1 to enable).&#xD;
[spocr vNext] Create new .env now? (Y/n): [spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-json-shape-4132508bec20495e9db53f77ccb309cc\.spocr\schema\legacy.json (utc=2025-10-23T16:07:51.5582943Z size=672)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-json-shape-4132508bec20495e9db53f77ccb309cc\.spocr\schema\legacy.json&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-json-shape-5d7db0a1bac9424789f0226e55cbc858\.spocr\schema\legacy.json (utc=2025-10-23T16:07:51.5622987Z size=648)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-json-shape-5d7db0a1bac9424789f0226e55cbc858\.spocr\schema\legacy.json&#xD;
[dbctx] mode=dual dcPath='DataContext' cwd=C:\Users\sgies\AppData\Local\Temp\l5ljsn51.4e0\my.project.segment rawWorking=C:\Users\sgies\AppData\Local\Temp\l5ljsn51.4e0\my.project.segment rootDir=C:\Users\sgies\AppData\Local\Temp\l5ljsn51.4e0\my.project.segment spocrDir=C:\Users\sgies\AppData\Local\Temp\l5ljsn51.4e0\my.project.segment\SpocR&#xD;
SpocR/ISpocRDbContext.cs (created)&#xD;
SpocR/SpocRDbContextOptions.cs (created)&#xD;
SpocR/SpocRDbContext.cs (created)&#xD;
SpocR/SpocRDbContextServiceCollectionExtensions.cs (created)&#xD;
[dbctx] Skip endpoints (TFM '&lt;null&gt;' \u001a major '&lt;none&gt;' != net10)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-json-rowver-73181e273f184166a3dd4e0239272cf1\.spocr\schema\legacy.json (utc=2025-10-23T16:07:51.5698261Z size=711)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-json-rowver-73181e273f184166a3dd4e0239272cf1\.spocr\schema\legacy.json&#xD;
[xUnit.net 00:00:09.06]       Assert.Contains() Failure: Sub-string not found&#xD;
[xUnit.net 00:00:09.06]       String:    "// &lt;auto-generated/&gt;\r\n// SpocR v4.5 Bridg"···&#xD;
[xUnit.net 00:00:09.06]       Not found: "public IReadOnlyList&lt;UserOrderHierarchyJs"···&#xD;
[xUnit.net 00:00:09.06]       Stack Trace:&#xD;
[xUnit.net 00:00:09.06]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generation\UnifiedResultTests.cs(32,0): at SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber()&#xD;
[xUnit.net 00:00:09.06]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:09.06]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[xUnit.net 00:00:09.06]       Assert.Contains() Failure: Sub-string not found&#xD;
[xUnit.net 00:00:09.06]       String:    "// &lt;auto-generated/&gt;\r\n// SpocR v4.5 Bridg"···&#xD;
[xUnit.net 00:00:09.06]       Not found: "public IReadOnlyList&lt;CreateUserWithOutput"···&#xD;
[xUnit.net 00:00:09.06]       Stack Trace:&#xD;
[xUnit.net 00:00:09.06]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generation\UnifiedResultTests.cs(18,0): at SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber()&#xD;
[xUnit.net 00:00:09.06]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:09.06]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[xUnit.net 00:00:40.55]       Shouldly.ShouldAssertException : stdout&#xD;
[xUnit.net 00:00:40.55]           should contain (case insensitive comparison)&#xD;
[xUnit.net 00:00:40.55]       "Generators succeeded"&#xD;
[xUnit.net 00:00:40.55]           but was actually&#xD;
[xUnit.net 00:00:40.55]       "&#xD;
[xUnit.net 00:00:40.55]       **************************************************&#xD;
[xUnit.net 00:00:40.55]       Pulling database schema from database&#xD;
[xUnit.net 00:00:40.55]       *******..."&#xD;
[xUnit.net 00:00:40.55]       Stack Trace:&#xD;
[xUnit.net 00:00:40.55]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\GoldenHash\GoldenHashPipelineDeterminismTests.cs(52,0): at SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.&lt;Rebuild_Twice_Produces_Identical_Golden_Hashes&gt;g__RunCli|1_0(&lt;&gt;c__DisplayClass1_0&amp;)&#xD;
[xUnit.net 00:00:40.55]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\GoldenHash\GoldenHashPipelineDeterminismTests.cs(58,0): at SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.Rebuild_Twice_Produces_Identical_Golden_Hashes()&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[xUnit.net 00:00:40.55]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#xD;
[xUnit.net 00:00:40.55]            at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task, ConfigureAwaitOptions options)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-order-eedd4ffd594d47b69093fee4f23624cf\.spocr\schema\legacy.json (utc=2025-10-23T16:08:23.1070560Z size=574)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-order-eedd4ffd594d47b69093fee4f23624cf\.spocr\schema\legacy.json&#xD;
[ordering-test] repoRoot=c:\Projekte\GitHub\spocr&#xD;
[ordering-test] unifiedPath=c:\Projekte\GitHub\spocr\src\SpocRVNext\Templates\Procedures\UnifiedProcedure.spt exists=True&#xD;
[ordering-test] headerPath=c:\Projekte\GitHub\spocr\src\SpocRVNext\Templates\_Header.spt exists=True&#xD;
[xUnit.net 00:00:40.58]       Unified procedure file not found. Searched 1 files for unified type 'UserListResult'.&#xD;
[xUnit.net 00:00:40.58]       Stack Trace:&#xD;
[xUnit.net 00:00:40.58]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generators\UnifiedProcedureOrderingTests.cs(83,0): at SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_HasExpectedSectionOrder()&#xD;
[xUnit.net 00:00:40.58]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:40.58]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\spocr-order-multi-689023474e004580a9b230711b8fafe4\.spocr\schema\legacy.json (utc=2025-10-23T16:08:23.1124446Z size=831)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\spocr-order-multi-689023474e004580a9b230711b8fafe4\.spocr\schema\legacy.json&#xD;
[ordering-test] repoRoot=c:\Projekte\GitHub\spocr&#xD;
[ordering-test] unifiedPath=c:\Projekte\GitHub\spocr\src\SpocRVNext\Templates\Procedures\UnifiedProcedure.spt exists=True&#xD;
[ordering-test] headerPath=c:\Projekte\GitHub\spocr\src\SpocRVNext\Templates\_Header.spt exists=True&#xD;
[xUnit.net 00:00:40.60]       Assert.NotNull() Failure: Value is null&#xD;
[xUnit.net 00:00:40.60]       Stack Trace:&#xD;
[xUnit.net 00:00:40.60]         c:\Projekte\GitHub\spocr\tests\SpocR.Tests\SpocRVNext\Generators\UnifiedProcedureOrderingTests.cs(171,0): at SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder()&#xD;
[xUnit.net 00:00:40.60]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
[xUnit.net 00:00:40.60]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)&#xD;
[diag-record] fallback=False columns=record,email&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\508db2b0454f4e8eb3b51e782614e71c\.spocr\schema\legacy-multiusers.json (utc=2025-10-23T16:08:23.1353801Z size=423)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\508db2b0454f4e8eb3b51e782614e71c\.spocr\schema\legacy-multiusers.json&#xD;
[spocr vNext] Info: using legacy 'StoredProcedures' key&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\8d9110bf4b764123b2382c0f89936e54\.spocr\schema\legacy-multiusers3.json (utc=2025-10-23T16:08:23.1383775Z size=373)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\8d9110bf4b764123b2382c0f89936e54\.spocr\schema\legacy-multiusers3.json&#xD;
[spocr vNext] Info: using legacy 'StoredProcedures' key&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\kap1f5kw.s2c\.spocr\schema\snap.json (utc=2025-10-23T16:08:23.1637305Z size=549)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\kap1f5kw.s2c\.spocr\schema\snap.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Warn: UnifiedProcedure.spt not found - generating fallback skeleton (check template path)&#xD;
[spocr vNext] legacy snapshot candidate: C:\Users\sgies\AppData\Local\Temp\kap1f5kw.s2c\.spocr\schema\snap.json (utc=2025-10-23T16:08:23.1637305Z size=549)&#xD;
[spocr vNext] Using legacy snapshot: C:\Users\sgies\AppData\Local\Temp\kap1f5kw.s2c\.spocr\schema\snap.json&#xD;
[spocr vNext] descriptor counts: inputs=1 outputs=1 procedures=2&#xD;
[spocr vNext] Warn: UnifiedProcedure.spt not found - generating fallback skeleton (check template path)&#xD;
[xUnit.net 00:00:40.68]   Finished:    SpocR.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:42.7256558+02:00">
        <Text>[xUnit.net 00:00:00.19]     SpocR.Tests.AggregateTypingExtendedTests.Aggregates_Should_Have_Inferred_Types [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:42.8561798+02:00">
        <Text>[xUnit.net 00:00:00.32]     SpocR.Tests.CodeGeneration.ModelGeneratorJsonEmptyModelTests.Generates_Xml_Doc_For_Empty_Json_Model [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:42.9101145+02:00">
        <Text>[xUnit.net 00:00:00.38]     SpocR.Tests.Cli.JsonParserDotAliasBindingTests.DottedAliases_Should_Have_SourceBinding_But_NoSqlType_FromParser [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:43.1361454+02:00">
        <Text>[xUnit.net 00:00:00.60]     SpocR.Tests.WrapperForwardingMixedTests.Mixed_Wrapper_With_Local_Set_And_ExecSource_Placeholder_Not_First_Position_Reduced_To_Placeholder_Plus_Local_Set [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:43.1520819+02:00">
        <Text>[xUnit.net 00:00:00.62]     SpocR.Tests.StoredProcedureAstTests.ForJsonPath_With_Root_Should_Produce_ResultSet_With_ArrayWrapper [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:43.1523891+02:00">
        <Text>[xUnit.net 00:00:00.62]     SpocR.Tests.StoredProcedureAstTests.ForJsonPath_WithoutArrayWrapper_Should_Set_ReturnsJsonArray_False [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:43.1619806+02:00">
        <Text>[xUnit.net 00:00:00.63]     SpocR.Tests.CodeGeneration.StoredProcedureGeneratorSnapshotTests.Snapshot_Raw_And_Deserialize_Pattern [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:43.3532999+02:00">
        <Text>[xUnit.net 00:00:00.82]     SpocR.Tests.JsonTypeMappingBasicTests.OptionalRef_Should_Be_Nullable_Int [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:51.5896544+02:00">
        <Text>[xUnit.net 00:00:09.06]     SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.OrderListAsJson_FirstResult_NoNumber_And_SecondResultHasNumber [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:07:51.5901425+02:00">
        <Text>[xUnit.net 00:00:09.06]     SpocR.Tests.SpocRVNext.Generation.UnifiedResultTests.CreateUserWithOutput_FirstResultProperty_IsResult_NoNumber [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:08:23.0858310+02:00">
        <Text>[xUnit.net 00:00:40.55]     SpocR.Tests.SpocRVNext.GoldenHash.GoldenHashPipelineDeterminismTests.Rebuild_Twice_Produces_Identical_Golden_Hashes [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:08:23.1120504+02:00">
        <Text>[xUnit.net 00:00:40.58]     SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_HasExpectedSectionOrder [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="WOODY" outcome="Error" timestamp="2025-10-23T18:08:23.1337020+02:00">
        <Text>[xUnit.net 00:00:40.60]     SpocR.Tests.SpocRVNext.Generators.UnifiedProcedureOrderingTests.GeneratedFile_MultiResult_HasSequentialResultSetRecordsInOrder [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>