name: SpocR Test Suite

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

env:
  DOTNET_VERSION: "8.0.x"

jobs:
  test:
    name: Test on ${{ matrix.os }} with .NET ${{ matrix.dotnet-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet-version: ["8.0.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore src/SpocR.csproj

      - name: Build project
        run: dotnet build src/SpocR.csproj --no-restore --configuration Release

      - name: Run Self-Validation
        run: dotnet run --project src/SpocR.csproj --configuration Release -- test --validate

      - name: Run All Tests
        run: dotnet test tests/Tests.sln --no-build --configuration Release --logger trx --results-directory TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.dotnet-version }}
          path: TestResults/

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore src/SpocR.csproj

      - name: Run Tests with Coverage
        run: |
          dotnet test tests/Tests.sln \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: TestResults/
