// <auto-generated/>
// SpocR v4.5 Bridge Phase (vNext generator). Do not edit this file directly.
// Changes may be overwritten. For customization extend generated partials.

namespace TestNs.SpocR.Samples;

using System;
#if SPOCR_ENABLE_TABLETYPE_VALIDATION
using FluentValidation;
#endif

/// <summary>
/// User Defined Table Type Samples.UserIdListTableType
/// <remarks>Generated at <generated></remarks>
/// </summary>
public sealed record UserIdListTableType : ITableType
{
    public int? UserId { get; init; }

#if SPOCR_ENFORCE_TABLETYPE_BUILDER
	#warning Use the 'UserIdListTableTypeBuilder' or factory method instead of object initializers.
#endif

	[Obsolete("Use the static Create(...) or builder for construction.")]
	public UserIdListTableType() { }

	public static UserIdListTableType Create(
        int? UserId
    ) =>
	#pragma warning disable CS0612, CS0618 // Suppress obsolete ctor usage in factory
	new UserIdListTableType
	{
        UserId = UserId
    };
	#pragma warning restore CS0612, CS0618

	#pragma warning disable CS0612, CS0618 // Suppress obsolete ctor usage warnings for internal factory construction

	public sealed class UserIdListTableTypeBuilder
	{
        private int? _UserId;
        private bool _hasUserId;

        public UserIdListTableTypeBuilder WithUserId(int? value) { _UserId = value; _hasUserId = true; return this; }
        public UserIdListTableType Build()
        {
			#pragma warning disable CS0612, CS0618 // Suppress obsolete ctor usage in builder
			var result = new UserIdListTableType
            {
                UserId = _UserId
            };
			#pragma warning restore CS0612, CS0618
#if SPOCR_ENABLE_TABLETYPE_VALIDATION
            UserIdListTableTypeValidator.Instance.ValidateAndThrow(result);
#endif
            return result;
        }
	}
#pragma warning restore CS0612, CS0618
#if SPOCR_ENABLE_TABLETYPE_VALIDATION
	private sealed class UserIdListTableTypeValidator : AbstractValidator<UserIdListTableType>
	{
		public static readonly UserIdListTableTypeValidator Instance = new();
		public UserIdListTableTypeValidator()
		{
			// Add rules (placeholder - extend generator to emit rules per column metadata, e.g. nullability / max length)
			// Example: RuleFor(x => x.SomeColumn).NotNull();
		}
	}
#endif
}
